name: Build, Test and Publish
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'develop'
      - 'feature/**'
      - 'feat/**'
      - 'fix/**'
      - 'fixes/**'

jobs:
  build-test-publish:
    env:
      NPM_TOKEN: ${{secrets.NPM_TOKEN}}
      NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      GH_USER: ${{secrets.GH_USER}}
      GH_EMAIL: ${{secrets.GH_EMAIL}}
      VC_HTTP_API_AUTH_TOKEN: ${{secrets.VC_HTTP_API_AUTH_TOKEN}}
      NODE_OPTIONS: --max_old_space_size=4096
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test123
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm build
      - name: run CI tests
        env:
          SPHEREON_SSI_MSAL_TENANT_ID: ${{ secrets.SPHEREON_SSI_MSAL_TENANT_ID }}
          SPHEREON_SSI_MSAL_CLIENT_ID: ${{ secrets.SPHEREON_SSI_MSAL_CLIENT_ID }}
          SPHEREON_SSI_MSAL_CLIENT_SECRET: ${{ secrets.SPHEREON_SSI_MSAL_CLIENT_SECRET }}
          SPHEREON_SSI_MSAL_USERNAME: ${{ secrets.SPHEREON_SSI_MSAL_USERNAME }}
          SPHEREON_SSI_MSAL_PASSWORD: ${{ secrets.SPHEREON_SSI_MSAL_PASSWORD }}
          INCLUDE_POSTGRES_TESTS: true
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test123
          POSTGRES_PORT: 5432
        run: pnpm test:ci

      - name: setup git coordinates
        run: |
          git remote set-url origin https://Sphereon-Opensource:$GH_TOKEN@github.com/Sphereon-Opensource/SSI-SDK.git
          git config user.name $GH_USER
          git config user.email $GH_EMAIL

      - name: setup npm registry
        run: |
          echo "@sphereon:registry=https://registry.npmjs.org/" > .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          echo "link-workspace-packages=deep" >> .npmrc
          echo "prefer-workspace-packages=true" >> .npmrc

      - name: show diff to track issues with lock file
        run: git diff -u

      - name: publish @latest when on main
        if: github.ref == 'refs/heads/main'
        run: pnpm publish:latest

      - name: publish @next when on develop
        if: github.ref == 'refs/heads/develop'
        run: pnpm publish:next

      - name: publish @next when on fix branch
        if: startsWith(github.ref, 'refs/heads/fix')
        run: pnpm publish:next

      - name: publish @unstable when on unstable branch
        if: startsWith(github.ref, 'refs/heads/feat')
        run: pnpm publish:unstable
