import { TAgent } from '@veramo/core'
import { ICredentialValidation, SchemaValidation, VerificationResult } from '../../src'
import { OriginalVerifiableCredential } from '@sphereon/ssi-types'
import * as fs from 'fs'

type ConfiguredAgent = TAgent<ICredentialValidation>

export default (testContext: { getAgent: () => ConfiguredAgent; setup: () => Promise<boolean>; tearDown: () => Promise<boolean> }): void => {
  function getFile(path: string) {
    return fs.readFileSync(path, 'utf-8')
  }

  function getFileAsJson(path: string) {
    return JSON.parse(getFile(path))
  }

  describe('Credential Validation Agent Plugin', (): void => {
    let agent: ConfiguredAgent

    beforeAll(async (): Promise<void> => {
      await testContext.setup()
      agent = testContext.getAgent()
    })

    afterAll(testContext.tearDown)

    it('should not validate schema for jwtVc when schema policy validation is set to ALWAYS and the schema is not accessible', async (): Promise<void> => {
      const jwtVc: OriginalVerifiableCredential =
        'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL2V4YW1wbGVzL3YxIl0sImlkIjoiaHR0cDovL2V4YW1wbGUuZWR1L2NyZWRlbnRpYWxzLzM3MzIiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiVW5pdmVyc2l0eURlZ3JlZUNyZWRlbnRpYWwiXSwiaXNzdWVyIjoiaHR0cHM6Ly9leGFtcGxlLmVkdS9pc3N1ZXJzLzE0IiwiaXNzdWFuY2VEYXRlIjoiMjAxMC0wMS0wMVQxOToyMzoyNFoiLCJjcmVkZW50aWFsU3ViamVjdCI6eyJpZCI6ImRpZDpleGFtcGxlOmViZmViMWY3MTJlYmM2ZjFjMjc2ZTEyZWMyMSIsImRlZ3JlZSI6eyJ0eXBlIjoiQmFjaGVsb3JEZWdyZWUiLCJuYW1lIjoiQmFjaGVsb3Igb2YgU2NpZW5jZSBhbmQgQXJ0cyJ9fSwiY3JlZGVudGlhbFNjaGVtYSI6eyJpZCI6Imh0dHBzOi8vZXhhbXBsZS5vcmcvZXhhbXBsZXMvZGVncmVlLmpzb24iLCJ0eXBlIjoiSnNvblNjaGVtYVZhbGlkYXRvcjIwMTgifX0sImlzcyI6Imh0dHBzOi8vZXhhbXBsZS5lZHUvaXNzdWVycy8xNCIsIm5iZiI6MTI2MjM3MzgwNCwianRpIjoiaHR0cDovL2V4YW1wbGUuZWR1L2NyZWRlbnRpYWxzLzM3MzIiLCJzdWIiOiJkaWQ6ZXhhbXBsZTplYmZlYjFmNzEyZWJjNmYxYzI3NmUxMmVjMjEifQ.GRJHwxvQfgEOP8TaaBnp2ZCPjFlA_KodpdBupHsRroql10gaE--8oAXR1e-wOuxjFoK-T814h9LKnv71IMI38Q'
      const result: VerificationResult = await agent.cvVerifySchema({ credential: jwtVc, validationPolicy: SchemaValidation.ALWAYS })
      expect(result.result).toBeFalsy()
    })

    it('should not validate schema for jwtVc when schema policy validation is set to WHEN_PRESENT and the schema is not accessible', async (): Promise<void> => {
      const jwtVc: OriginalVerifiableCredential =
        'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL2V4YW1wbGVzL3YxIl0sImlkIjoiaHR0cDovL2V4YW1wbGUuZWR1L2NyZWRlbnRpYWxzLzM3MzIiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiVW5pdmVyc2l0eURlZ3JlZUNyZWRlbnRpYWwiXSwiaXNzdWVyIjoiaHR0cHM6Ly9leGFtcGxlLmVkdS9pc3N1ZXJzLzE0IiwiaXNzdWFuY2VEYXRlIjoiMjAxMC0wMS0wMVQxOToyMzoyNFoiLCJjcmVkZW50aWFsU3ViamVjdCI6eyJpZCI6ImRpZDpleGFtcGxlOmViZmViMWY3MTJlYmM2ZjFjMjc2ZTEyZWMyMSIsImRlZ3JlZSI6eyJ0eXBlIjoiQmFjaGVsb3JEZWdyZWUiLCJuYW1lIjoiQmFjaGVsb3Igb2YgU2NpZW5jZSBhbmQgQXJ0cyJ9fSwiY3JlZGVudGlhbFNjaGVtYSI6eyJpZCI6Imh0dHBzOi8vZXhhbXBsZS5vcmcvZXhhbXBsZXMvZGVncmVlLmpzb24iLCJ0eXBlIjoiSnNvblNjaGVtYVZhbGlkYXRvcjIwMTgifX0sImlzcyI6Imh0dHBzOi8vZXhhbXBsZS5lZHUvaXNzdWVycy8xNCIsIm5iZiI6MTI2MjM3MzgwNCwianRpIjoiaHR0cDovL2V4YW1wbGUuZWR1L2NyZWRlbnRpYWxzLzM3MzIiLCJzdWIiOiJkaWQ6ZXhhbXBsZTplYmZlYjFmNzEyZWJjNmYxYzI3NmUxMmVjMjEifQ.GRJHwxvQfgEOP8TaaBnp2ZCPjFlA_KodpdBupHsRroql10gaE--8oAXR1e-wOuxjFoK-T814h9LKnv71IMI38Q'
      const result: VerificationResult = await agent.cvVerifySchema({ credential: jwtVc, validationPolicy: SchemaValidation.WHEN_PRESENT })
      expect(result.result).toBeFalsy()
    })

    it('should validate schema for jwtVc when schema policy validation is set to NEVER and the schema is not accessible', async (): Promise<void> => {
      const jwtVc: OriginalVerifiableCredential =
        'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL2V4YW1wbGVzL3YxIl0sImlkIjoiaHR0cDovL2V4YW1wbGUuZWR1L2NyZWRlbnRpYWxzLzM3MzIiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiVW5pdmVyc2l0eURlZ3JlZUNyZWRlbnRpYWwiXSwiaXNzdWVyIjoiaHR0cHM6Ly9leGFtcGxlLmVkdS9pc3N1ZXJzLzE0IiwiaXNzdWFuY2VEYXRlIjoiMjAxMC0wMS0wMVQxOToyMzoyNFoiLCJjcmVkZW50aWFsU3ViamVjdCI6eyJpZCI6ImRpZDpleGFtcGxlOmViZmViMWY3MTJlYmM2ZjFjMjc2ZTEyZWMyMSIsImRlZ3JlZSI6eyJ0eXBlIjoiQmFjaGVsb3JEZWdyZWUiLCJuYW1lIjoiQmFjaGVsb3Igb2YgU2NpZW5jZSBhbmQgQXJ0cyJ9fSwiY3JlZGVudGlhbFNjaGVtYSI6eyJpZCI6Imh0dHBzOi8vZXhhbXBsZS5vcmcvZXhhbXBsZXMvZGVncmVlLmpzb24iLCJ0eXBlIjoiSnNvblNjaGVtYVZhbGlkYXRvcjIwMTgifX0sImlzcyI6Imh0dHBzOi8vZXhhbXBsZS5lZHUvaXNzdWVycy8xNCIsIm5iZiI6MTI2MjM3MzgwNCwianRpIjoiaHR0cDovL2V4YW1wbGUuZWR1L2NyZWRlbnRpYWxzLzM3MzIiLCJzdWIiOiJkaWQ6ZXhhbXBsZTplYmZlYjFmNzEyZWJjNmYxYzI3NmUxMmVjMjEifQ.GRJHwxvQfgEOP8TaaBnp2ZCPjFlA_KodpdBupHsRroql10gaE--8oAXR1e-wOuxjFoK-T814h9LKnv71IMI38Q'
      const result: VerificationResult = await agent.cvVerifySchema({ credential: jwtVc, validationPolicy: SchemaValidation.NEVER })
      expect(result.result).toBeTruthy()
    })

    it('should return true verifying schema when schema policy for ldpVc validation is set to NEVER and the schema is not present', async (): Promise<void> => {
      const ldpVc: OriginalVerifiableCredential = getFileAsJson('packages/ssi-types/__tests__/vc_vp_examples/vc/vc_driverLicense.json')
      const result: VerificationResult = await agent.cvVerifySchema({ credential: JSON.stringify(ldpVc), validationPolicy: SchemaValidation.NEVER })
      expect(result.result).toBeTruthy()
    })

    it('should validate schema when schema policy for ldpVc validation is set to WHEN_PRESENT and the schema is not present', async (): Promise<void> => {
      const ldpVc: OriginalVerifiableCredential = getFileAsJson('packages/ssi-types/__tests__/vc_vp_examples/vc/vc_driverLicense.json')
      const result: VerificationResult = await agent.cvVerifySchema({
        credential: JSON.stringify(ldpVc),
        validationPolicy: SchemaValidation.WHEN_PRESENT,
      })
      expect(result.result).toBeTruthy()
    })

    it('should not validate schema when schema policy for ldpVc validation is set to ALWAYS and the schema is not present', async (): Promise<void> => {
      const ldpVc: OriginalVerifiableCredential = getFileAsJson('packages/ssi-types/__tests__/vc_vp_examples/vc/vc_driverLicense.json')
      const result: VerificationResult = await agent.cvVerifySchema({ credential: JSON.stringify(ldpVc), validationPolicy: SchemaValidation.ALWAYS })
      expect(result.result).toBeFalsy()
    })

    it('should validate schema when schema policy for ebsiAuthorisationToOnboardVc validation is set to NEVER and the schema is present', async (): Promise<void> => {
      const ebsiAuthorisationToOnboardVc: OriginalVerifiableCredential =
        'eyJ0eXAiOiJKV1QiLCJraWQiOiIxODNkY2E4NDRiNzM5OGM4MTQ0ZTJiMzk5OWM3MzA2Y2I3OTYzMDJhZWQxNDdkNjY4ZmI2ZmI5YmE0OTZkNTBkIiwiYWxnIjoiRVMyNTZLIn0.eyJpc3N1ZXIiOiJkaWQ6ZWJzaTp6aURuaW94WVlMVzFhM3FVYnFURno0VyIsImlhdCI6MTcxNDQxMzA4OCwianRpIjoidXJuOnV1aWQ6NWZiN2Q5OGItMTA4Yy00YmMwLTlmZmMtYzY5Zjg0ZWQ3ODhmIiwibmJmIjoxNzE0NDEzMDg4LCJleHAiOjE3NDU5NDkwODgsInN1YiI6ImRpZDplYnNpOnpleWJBaUp4elVVcldRMVlNNTFTWTM1IiwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiXSwiaWQiOiJ1cm46dXVpZDo1ZmI3ZDk4Yi0xMDhjLTRiYzAtOWZmYy1jNjlmODRlZDc4OGYiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiVmVyaWZpYWJsZUF0dGVzdGF0aW9uIiwiVmVyaWZpYWJsZUF1dGhvcmlzYXRpb25Ub09uYm9hcmQiXSwiaXNzdWFuY2VEYXRlIjoiMjAyNC0wNC0yOVQxNzo1MToyOFoiLCJpc3N1ZWQiOiIyMDI0LTA0LTI5VDE3OjUxOjI4WiIsInZhbGlkRnJvbSI6IjIwMjQtMDQtMjlUMTc6NTE6MjhaIiwiZXhwaXJhdGlvbkRhdGUiOiIyMDI1LTA0LTI5VDE3OjUxOjI4WiIsImlzc3VlciI6ImRpZDplYnNpOnppRG5pb3hZWUxXMWEzcVVicVRGejRXIiwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6ZWJzaTp6ZXliQWlKeHpVVXJXUTFZTTUxU1kzNSIsImFjY3JlZGl0ZWRGb3IiOltdfSwidGVybXNPZlVzZSI6eyJpZCI6ImRpZDplYnNpOnpleWJBaUp4elVVcldRMVlNNTFTWTM1IiwidHlwZSI6Iklzc3VhbmNlQ2VydGlmaWNhdGUifSwiY3JlZGVudGlhbFNjaGVtYSI6eyJpZCI6Imh0dHBzOi8vYXBpLXBpbG90LmVic2kuZXUvdHJ1c3RlZC1zY2hlbWFzLXJlZ2lzdHJ5L3YyL3NjaGVtYXMvejNNZ1VGVWtiNzIydXE0eDNkdjV5QUptbk5tekRGZUs1VUM4eDgzUW9lTEpNIiwidHlwZSI6IkZ1bGxKc29uU2NoZW1hVmFsaWRhdG9yMjAyMSJ9fX0.QWNWTWlrbUpLcFJaLVBGczQ0U3Mxb200Mk4yb3JzWndsTXp3REpHTTMxSUM2WG5ZVXJ0ZlY4RHFTbVQtaXBIMEdLSDZhclFEcGtrbXZTTy1NenYxWEE'
      const result: VerificationResult = await agent.cvVerifySchema({
        credential: ebsiAuthorisationToOnboardVc,
        validationPolicy: SchemaValidation.NEVER,
      })
      expect(result.result).toBeTruthy()
    })

    it('should not validate schema when schema policy for ebsiAuthorisationToOnboardVc validation is set to WHEN_PRESENT and the schema is present', async (): Promise<void> => {
      const ebsiAuthorisationToOnboardVc: OriginalVerifiableCredential =
        'eyJ0eXAiOiJKV1QiLCJraWQiOiIxODNkY2E4NDRiNzM5OGM4MTQ0ZTJiMzk5OWM3MzA2Y2I3OTYzMDJhZWQxNDdkNjY4ZmI2ZmI5YmE0OTZkNTBkIiwiYWxnIjoiRVMyNTZLIn0.eyJpc3N1ZXIiOiJkaWQ6ZWJzaTp6aURuaW94WVlMVzFhM3FVYnFURno0VyIsImlhdCI6MTcxNDQxMzA4OCwianRpIjoidXJuOnV1aWQ6NWZiN2Q5OGItMTA4Yy00YmMwLTlmZmMtYzY5Zjg0ZWQ3ODhmIiwibmJmIjoxNzE0NDEzMDg4LCJleHAiOjE3NDU5NDkwODgsInN1YiI6ImRpZDplYnNpOnpleWJBaUp4elVVcldRMVlNNTFTWTM1IiwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiXSwiaWQiOiJ1cm46dXVpZDo1ZmI3ZDk4Yi0xMDhjLTRiYzAtOWZmYy1jNjlmODRlZDc4OGYiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiVmVyaWZpYWJsZUF0dGVzdGF0aW9uIiwiVmVyaWZpYWJsZUF1dGhvcmlzYXRpb25Ub09uYm9hcmQiXSwiaXNzdWFuY2VEYXRlIjoiMjAyNC0wNC0yOVQxNzo1MToyOFoiLCJpc3N1ZWQiOiIyMDI0LTA0LTI5VDE3OjUxOjI4WiIsInZhbGlkRnJvbSI6IjIwMjQtMDQtMjlUMTc6NTE6MjhaIiwiZXhwaXJhdGlvbkRhdGUiOiIyMDI1LTA0LTI5VDE3OjUxOjI4WiIsImlzc3VlciI6ImRpZDplYnNpOnppRG5pb3hZWUxXMWEzcVVicVRGejRXIiwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6ZWJzaTp6ZXliQWlKeHpVVXJXUTFZTTUxU1kzNSIsImFjY3JlZGl0ZWRGb3IiOltdfSwidGVybXNPZlVzZSI6eyJpZCI6ImRpZDplYnNpOnpleWJBaUp4elVVcldRMVlNNTFTWTM1IiwidHlwZSI6Iklzc3VhbmNlQ2VydGlmaWNhdGUifSwiY3JlZGVudGlhbFNjaGVtYSI6eyJpZCI6Imh0dHBzOi8vYXBpLXBpbG90LmVic2kuZXUvdHJ1c3RlZC1zY2hlbWFzLXJlZ2lzdHJ5L3YyL3NjaGVtYXMvejNNZ1VGVWtiNzIydXE0eDNkdjV5QUptbk5tekRGZUs1VUM4eDgzUW9lTEpNIiwidHlwZSI6IkZ1bGxKc29uU2NoZW1hVmFsaWRhdG9yMjAyMSJ9fX0.QWNWTWlrbUpLcFJaLVBGczQ0U3Mxb200Mk4yb3JzWndsTXp3REpHTTMxSUM2WG5ZVXJ0ZlY4RHFTbVQtaXBIMEdLSDZhclFEcGtrbXZTTy1NenYxWEE'
      const result: VerificationResult = await agent.cvVerifySchema({
        credential: ebsiAuthorisationToOnboardVc,
        validationPolicy: SchemaValidation.WHEN_PRESENT,
      })
      expect(result.result).toBeFalsy()
    })

    it('should not validate schema when schema policy for ebsiAuthorisationToOnboardVc validation is set to ALWAYS and the schema is present', async (): Promise<void> => {
      const ebsiAuthorisationToOnboardVc: OriginalVerifiableCredential =
        'eyJ0eXAiOiJKV1QiLCJraWQiOiIxODNkY2E4NDRiNzM5OGM4MTQ0ZTJiMzk5OWM3MzA2Y2I3OTYzMDJhZWQxNDdkNjY4ZmI2ZmI5YmE0OTZkNTBkIiwiYWxnIjoiRVMyNTZLIn0.eyJpc3N1ZXIiOiJkaWQ6ZWJzaTp6aURuaW94WVlMVzFhM3FVYnFURno0VyIsImlhdCI6MTcxNDQxMzA4OCwianRpIjoidXJuOnV1aWQ6NWZiN2Q5OGItMTA4Yy00YmMwLTlmZmMtYzY5Zjg0ZWQ3ODhmIiwibmJmIjoxNzE0NDEzMDg4LCJleHAiOjE3NDU5NDkwODgsInN1YiI6ImRpZDplYnNpOnpleWJBaUp4elVVcldRMVlNNTFTWTM1IiwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiXSwiaWQiOiJ1cm46dXVpZDo1ZmI3ZDk4Yi0xMDhjLTRiYzAtOWZmYy1jNjlmODRlZDc4OGYiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiVmVyaWZpYWJsZUF0dGVzdGF0aW9uIiwiVmVyaWZpYWJsZUF1dGhvcmlzYXRpb25Ub09uYm9hcmQiXSwiaXNzdWFuY2VEYXRlIjoiMjAyNC0wNC0yOVQxNzo1MToyOFoiLCJpc3N1ZWQiOiIyMDI0LTA0LTI5VDE3OjUxOjI4WiIsInZhbGlkRnJvbSI6IjIwMjQtMDQtMjlUMTc6NTE6MjhaIiwiZXhwaXJhdGlvbkRhdGUiOiIyMDI1LTA0LTI5VDE3OjUxOjI4WiIsImlzc3VlciI6ImRpZDplYnNpOnppRG5pb3hZWUxXMWEzcVVicVRGejRXIiwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6ZWJzaTp6ZXliQWlKeHpVVXJXUTFZTTUxU1kzNSIsImFjY3JlZGl0ZWRGb3IiOltdfSwidGVybXNPZlVzZSI6eyJpZCI6ImRpZDplYnNpOnpleWJBaUp4elVVcldRMVlNNTFTWTM1IiwidHlwZSI6Iklzc3VhbmNlQ2VydGlmaWNhdGUifSwiY3JlZGVudGlhbFNjaGVtYSI6eyJpZCI6Imh0dHBzOi8vYXBpLXBpbG90LmVic2kuZXUvdHJ1c3RlZC1zY2hlbWFzLXJlZ2lzdHJ5L3YyL3NjaGVtYXMvejNNZ1VGVWtiNzIydXE0eDNkdjV5QUptbk5tekRGZUs1VUM4eDgzUW9lTEpNIiwidHlwZSI6IkZ1bGxKc29uU2NoZW1hVmFsaWRhdG9yMjAyMSJ9fX0.QWNWTWlrbUpLcFJaLVBGczQ0U3Mxb200Mk4yb3JzWndsTXp3REpHTTMxSUM2WG5ZVXJ0ZlY4RHFTbVQtaXBIMEdLSDZhclFEcGtrbXZTTy1NenYxWEE'
      /*
           const ebsiKVKRegistrationVc: OriginalVerifiableCredential =
               'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxIzM2WlJCMlFwUzd3aTBUUWMwQVI0NVM4UXpsS2I5UkdUMXRKUndDNGctakEifQ.eyJpc3MiOiJkaWQ6ZWJzaTp6bUtDOWluM2N2M3k4RFBTRXFEVW5HMSIsInN1YiI6ImRpZDpqd2s6ZXlKcmRIa2lPaUpQUzFBaUxDSmpjbllpT2lKRlpESTFOVEU1SWl3aWEybGtJam9pZGtwa1ZUQlBkRzFUUVZVNFZFMXVhVlJxUzJJMFRVZFdNelJaVG1kaWJHNU5NMHBNTWsxTFpsbFNPQ0lzSW5naU9pSXhVRGRIVjBkc09HRnlWM05SUmkxMFFYUTJXVTlPTFd4TkxVOXZTM0ZLVEc1bFZuSmFURWhWU25sdkluMCIsInZjIjp7IkBjb250ZXh0IjpbImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL3YxIiwiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvZXhhbXBsZXMvdjEiXSwiaWQiOiJ1cm46dXVpZDo4OGU3NWVjOS1lMGUxLTQ0NzEtOWIyNi05ZjJhNTk0MmUxNjAiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiVmVyaWZpYWJsZUF0dGVzdGF0aW9uIiwiS1ZLUmVnaXN0cmF0aW9uIl0sImlzc3VlciI6ImRpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxIiwiaXNzdWVkIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwidmFsaWRGcm9tIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwiaXNzdWFuY2VEYXRlIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6andrOmV5SnJkSGtpT2lKUFMxQWlMQ0pqY25ZaU9pSkZaREkxTlRFNUlpd2lhMmxrSWpvaWRrcGtWVEJQZEcxVFFWVTRWRTF1YVZScVMySTBUVWRXTXpSWlRtZGliRzVOTTBwTU1rMUxabGxTT0NJc0luZ2lPaUl4VURkSFYwZHNPR0Z5VjNOUlJpMTBRWFEyV1U5T0xXeE5MVTl2UzNGS1RHNWxWbkphVEVoVlNubHZJbjAiLCJrdmtOdW1tZXIiOiIyNDEyOTg3NiIsIm5hYW0iOiJEdXRjaENyYWZ0IEZ1cm5pc2hpbmciLCJyZWNodHN2b3JtIjoiQmVzbG90ZW4gVmVubm9vdHNjaGFwIiwic3RhcnRkYXR1bSI6IjIwMjItMDctMDEiLCJlaW5kZGF0dW0iOiIifSwidGVybXNPZlVzZSI6W3siaWQiOiJodHRwczovL2FwaS1waWxvdC5lYnNpLmV1L3RydXN0ZWQtaXNzdWVycy1yZWdpc3RyeS92NS9pc3N1ZXJzL2RpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxL2F0dHJpYnV0ZXMvZGVhOThhMjIwMTNiMGEyNjgzODNmNWZhZjc4OTJjYjUzMDU4NDI1OGNiOGUzYmZiZTdiMTQ4M2Y3YzY2NjQyMyIsInR5cGUiOiJJc3N1YW5jZUNlcnRpZmljYXRlIn1dLCJjcmVkZW50aWFsU2NoZW1hIjp7ImlkIjoiaHR0cHM6Ly9hcGktcGlsb3QuZWJzaS5ldS90cnVzdGVkLXNjaGVtYXMtcmVnaXN0cnkvdjMvc2NoZW1hcy8weGQyMjA0NjQ3ODE4ZjljMGM5M2Y2NGI3MGYxYzg5MmVhMmE4ZTBhNzQ3Y2VhYTJmNzczNzNiNDE5OTZiYjc2NGQiLCJ0eXBlIjoiRnVsbEpzb25TY2hlbWFWYWxpZGF0b3IyMDIxIn0sImNyZWRlbnRpYWxTdGF0dXMiOnsiaWQiOiJodHRwczovL3dhbGxldC5hY2MuY3JlZGVuY28uY29tL2FwaS9zdGF0dXMvZGY4MDNkZDQtMzJjNi00YTY5LWFmZTUtZDgwN2M2NzAxZWQ3LzEjNjY5MDQiLCJ0eXBlIjoiU3RhdHVzTGlzdDIwMjFFbnRyeSIsInN0YXR1c1B1cnBvc2UiOiJyZXZvY2F0aW9uIiwic3RhdHVzTGlzdEluZGV4Ijo2NjkwNCwic3RhdHVzTGlzdENyZWRlbnRpYWwiOiJodHRwczovL3dhbGxldC5hY2MuY3JlZGVuY28uY29tL2FwaS9zdGF0dXMvZGY4MDNkZDQtMzJjNi00YTY5LWFmZTUtZDgwN2M2NzAxZWQ3LzEifX0sImp0aSI6InVybjp1dWlkOjg4ZTc1ZWM5LWUwZTEtNDQ3MS05YjI2LTlmMmE1OTQyZTE2MCIsImlhdCI6MTcyNjY2MzE2NywibmJmIjoxNzI2NjYzMTY3fQ.AnfEichO9BbwyCbNH9wImUMShEc9IWYISMfIDXsnqgyH8GijwlioeS75HyJasNWbFXWvSFfKpOkTqXxOji0GGw'*/
      const result: VerificationResult = await agent.cvVerifySchema({
        credential: ebsiAuthorisationToOnboardVc,
        validationPolicy: SchemaValidation.ALWAYS,
      })
      expect(result.result).toBeFalsy()
    })

    it('should validate schema when schema policy for ebsiKVKRegistrationVc validation is set to NEVER and the schema is present', async (): Promise<void> => {
      const ebsiKVKRegistrationVc: OriginalVerifiableCredential =
        'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxIzM2WlJCMlFwUzd3aTBUUWMwQVI0NVM4UXpsS2I5UkdUMXRKUndDNGctakEifQ.eyJpc3MiOiJkaWQ6ZWJzaTp6bUtDOWluM2N2M3k4RFBTRXFEVW5HMSIsInN1YiI6ImRpZDpqd2s6ZXlKcmRIa2lPaUpQUzFBaUxDSmpjbllpT2lKRlpESTFOVEU1SWl3aWEybGtJam9pZGtwa1ZUQlBkRzFUUVZVNFZFMXVhVlJxUzJJMFRVZFdNelJaVG1kaWJHNU5NMHBNTWsxTFpsbFNPQ0lzSW5naU9pSXhVRGRIVjBkc09HRnlWM05SUmkxMFFYUTJXVTlPTFd4TkxVOXZTM0ZLVEc1bFZuSmFURWhWU25sdkluMCIsInZjIjp7IkBjb250ZXh0IjpbImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL3YxIiwiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvZXhhbXBsZXMvdjEiXSwiaWQiOiJ1cm46dXVpZDo4OGU3NWVjOS1lMGUxLTQ0NzEtOWIyNi05ZjJhNTk0MmUxNjAiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiVmVyaWZpYWJsZUF0dGVzdGF0aW9uIiwiS1ZLUmVnaXN0cmF0aW9uIl0sImlzc3VlciI6ImRpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxIiwiaXNzdWVkIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwidmFsaWRGcm9tIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwiaXNzdWFuY2VEYXRlIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6andrOmV5SnJkSGtpT2lKUFMxQWlMQ0pqY25ZaU9pSkZaREkxTlRFNUlpd2lhMmxrSWpvaWRrcGtWVEJQZEcxVFFWVTRWRTF1YVZScVMySTBUVWRXTXpSWlRtZGliRzVOTTBwTU1rMUxabGxTT0NJc0luZ2lPaUl4VURkSFYwZHNPR0Z5VjNOUlJpMTBRWFEyV1U5T0xXeE5MVTl2UzNGS1RHNWxWbkphVEVoVlNubHZJbjAiLCJrdmtOdW1tZXIiOiIyNDEyOTg3NiIsIm5hYW0iOiJEdXRjaENyYWZ0IEZ1cm5pc2hpbmciLCJyZWNodHN2b3JtIjoiQmVzbG90ZW4gVmVubm9vdHNjaGFwIiwic3RhcnRkYXR1bSI6IjIwMjItMDctMDEiLCJlaW5kZGF0dW0iOiIifSwidGVybXNPZlVzZSI6W3siaWQiOiJodHRwczovL2FwaS1waWxvdC5lYnNpLmV1L3RydXN0ZWQtaXNzdWVycy1yZWdpc3RyeS92NS9pc3N1ZXJzL2RpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxL2F0dHJpYnV0ZXMvZGVhOThhMjIwMTNiMGEyNjgzODNmNWZhZjc4OTJjYjUzMDU4NDI1OGNiOGUzYmZiZTdiMTQ4M2Y3YzY2NjQyMyIsInR5cGUiOiJJc3N1YW5jZUNlcnRpZmljYXRlIn1dLCJjcmVkZW50aWFsU2NoZW1hIjp7ImlkIjoiaHR0cHM6Ly9hcGktcGlsb3QuZWJzaS5ldS90cnVzdGVkLXNjaGVtYXMtcmVnaXN0cnkvdjMvc2NoZW1hcy8weGQyMjA0NjQ3ODE4ZjljMGM5M2Y2NGI3MGYxYzg5MmVhMmE4ZTBhNzQ3Y2VhYTJmNzczNzNiNDE5OTZiYjc2NGQiLCJ0eXBlIjoiRnVsbEpzb25TY2hlbWFWYWxpZGF0b3IyMDIxIn0sImNyZWRlbnRpYWxTdGF0dXMiOnsiaWQiOiJodHRwczovL3dhbGxldC5hY2MuY3JlZGVuY28uY29tL2FwaS9zdGF0dXMvZGY4MDNkZDQtMzJjNi00YTY5LWFmZTUtZDgwN2M2NzAxZWQ3LzEjNjY5MDQiLCJ0eXBlIjoiU3RhdHVzTGlzdDIwMjFFbnRyeSIsInN0YXR1c1B1cnBvc2UiOiJyZXZvY2F0aW9uIiwic3RhdHVzTGlzdEluZGV4Ijo2NjkwNCwic3RhdHVzTGlzdENyZWRlbnRpYWwiOiJodHRwczovL3dhbGxldC5hY2MuY3JlZGVuY28uY29tL2FwaS9zdGF0dXMvZGY4MDNkZDQtMzJjNi00YTY5LWFmZTUtZDgwN2M2NzAxZWQ3LzEifX0sImp0aSI6InVybjp1dWlkOjg4ZTc1ZWM5LWUwZTEtNDQ3MS05YjI2LTlmMmE1OTQyZTE2MCIsImlhdCI6MTcyNjY2MzE2NywibmJmIjoxNzI2NjYzMTY3fQ.AnfEichO9BbwyCbNH9wImUMShEc9IWYISMfIDXsnqgyH8GijwlioeS75HyJasNWbFXWvSFfKpOkTqXxOji0GGw'
      const result: VerificationResult = await agent.cvVerifySchema({ credential: ebsiKVKRegistrationVc, validationPolicy: SchemaValidation.NEVER })
      expect(result.result).toBeTruthy()
    })

    it('should not validate schema when schema policy for ebsiKVKRegistrationVc validation is set to WHEN_PRESENT and the schema is present', async (): Promise<void> => {
      const ebsiKVKRegistrationVc: OriginalVerifiableCredential =
        'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxIzM2WlJCMlFwUzd3aTBUUWMwQVI0NVM4UXpsS2I5UkdUMXRKUndDNGctakEifQ.eyJpc3MiOiJkaWQ6ZWJzaTp6bUtDOWluM2N2M3k4RFBTRXFEVW5HMSIsInN1YiI6ImRpZDpqd2s6ZXlKcmRIa2lPaUpQUzFBaUxDSmpjbllpT2lKRlpESTFOVEU1SWl3aWEybGtJam9pZGtwa1ZUQlBkRzFUUVZVNFZFMXVhVlJxUzJJMFRVZFdNelJaVG1kaWJHNU5NMHBNTWsxTFpsbFNPQ0lzSW5naU9pSXhVRGRIVjBkc09HRnlWM05SUmkxMFFYUTJXVTlPTFd4TkxVOXZTM0ZLVEc1bFZuSmFURWhWU25sdkluMCIsInZjIjp7IkBjb250ZXh0IjpbImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL3YxIiwiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvZXhhbXBsZXMvdjEiXSwiaWQiOiJ1cm46dXVpZDo4OGU3NWVjOS1lMGUxLTQ0NzEtOWIyNi05ZjJhNTk0MmUxNjAiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiVmVyaWZpYWJsZUF0dGVzdGF0aW9uIiwiS1ZLUmVnaXN0cmF0aW9uIl0sImlzc3VlciI6ImRpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxIiwiaXNzdWVkIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwidmFsaWRGcm9tIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwiaXNzdWFuY2VEYXRlIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6andrOmV5SnJkSGtpT2lKUFMxQWlMQ0pqY25ZaU9pSkZaREkxTlRFNUlpd2lhMmxrSWpvaWRrcGtWVEJQZEcxVFFWVTRWRTF1YVZScVMySTBUVWRXTXpSWlRtZGliRzVOTTBwTU1rMUxabGxTT0NJc0luZ2lPaUl4VURkSFYwZHNPR0Z5VjNOUlJpMTBRWFEyV1U5T0xXeE5MVTl2UzNGS1RHNWxWbkphVEVoVlNubHZJbjAiLCJrdmtOdW1tZXIiOiIyNDEyOTg3NiIsIm5hYW0iOiJEdXRjaENyYWZ0IEZ1cm5pc2hpbmciLCJyZWNodHN2b3JtIjoiQmVzbG90ZW4gVmVubm9vdHNjaGFwIiwic3RhcnRkYXR1bSI6IjIwMjItMDctMDEiLCJlaW5kZGF0dW0iOiIifSwidGVybXNPZlVzZSI6W3siaWQiOiJodHRwczovL2FwaS1waWxvdC5lYnNpLmV1L3RydXN0ZWQtaXNzdWVycy1yZWdpc3RyeS92NS9pc3N1ZXJzL2RpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxL2F0dHJpYnV0ZXMvZGVhOThhMjIwMTNiMGEyNjgzODNmNWZhZjc4OTJjYjUzMDU4NDI1OGNiOGUzYmZiZTdiMTQ4M2Y3YzY2NjQyMyIsInR5cGUiOiJJc3N1YW5jZUNlcnRpZmljYXRlIn1dLCJjcmVkZW50aWFsU2NoZW1hIjp7ImlkIjoiaHR0cHM6Ly9hcGktcGlsb3QuZWJzaS5ldS90cnVzdGVkLXNjaGVtYXMtcmVnaXN0cnkvdjMvc2NoZW1hcy8weGQyMjA0NjQ3ODE4ZjljMGM5M2Y2NGI3MGYxYzg5MmVhMmE4ZTBhNzQ3Y2VhYTJmNzczNzNiNDE5OTZiYjc2NGQiLCJ0eXBlIjoiRnVsbEpzb25TY2hlbWFWYWxpZGF0b3IyMDIxIn0sImNyZWRlbnRpYWxTdGF0dXMiOnsiaWQiOiJodHRwczovL3dhbGxldC5hY2MuY3JlZGVuY28uY29tL2FwaS9zdGF0dXMvZGY4MDNkZDQtMzJjNi00YTY5LWFmZTUtZDgwN2M2NzAxZWQ3LzEjNjY5MDQiLCJ0eXBlIjoiU3RhdHVzTGlzdDIwMjFFbnRyeSIsInN0YXR1c1B1cnBvc2UiOiJyZXZvY2F0aW9uIiwic3RhdHVzTGlzdEluZGV4Ijo2NjkwNCwic3RhdHVzTGlzdENyZWRlbnRpYWwiOiJodHRwczovL3dhbGxldC5hY2MuY3JlZGVuY28uY29tL2FwaS9zdGF0dXMvZGY4MDNkZDQtMzJjNi00YTY5LWFmZTUtZDgwN2M2NzAxZWQ3LzEifX0sImp0aSI6InVybjp1dWlkOjg4ZTc1ZWM5LWUwZTEtNDQ3MS05YjI2LTlmMmE1OTQyZTE2MCIsImlhdCI6MTcyNjY2MzE2NywibmJmIjoxNzI2NjYzMTY3fQ.AnfEichO9BbwyCbNH9wImUMShEc9IWYISMfIDXsnqgyH8GijwlioeS75HyJasNWbFXWvSFfKpOkTqXxOji0GGw'
      const result: VerificationResult = await agent.cvVerifySchema({
        credential: ebsiKVKRegistrationVc,
        validationPolicy: SchemaValidation.WHEN_PRESENT,
      })
      expect(result.result).toBeFalsy()
    })

    it('should not validate schema when schema policy for ebsiKVKRegistrationVc validation is set to ALWAYS and the schema is present', async (): Promise<void> => {
      const ebsiKVKRegistrationVc: OriginalVerifiableCredential =
        'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxIzM2WlJCMlFwUzd3aTBUUWMwQVI0NVM4UXpsS2I5UkdUMXRKUndDNGctakEifQ.eyJpc3MiOiJkaWQ6ZWJzaTp6bUtDOWluM2N2M3k4RFBTRXFEVW5HMSIsInN1YiI6ImRpZDpqd2s6ZXlKcmRIa2lPaUpQUzFBaUxDSmpjbllpT2lKRlpESTFOVEU1SWl3aWEybGtJam9pZGtwa1ZUQlBkRzFUUVZVNFZFMXVhVlJxUzJJMFRVZFdNelJaVG1kaWJHNU5NMHBNTWsxTFpsbFNPQ0lzSW5naU9pSXhVRGRIVjBkc09HRnlWM05SUmkxMFFYUTJXVTlPTFd4TkxVOXZTM0ZLVEc1bFZuSmFURWhWU25sdkluMCIsInZjIjp7IkBjb250ZXh0IjpbImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL3YxIiwiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvZXhhbXBsZXMvdjEiXSwiaWQiOiJ1cm46dXVpZDo4OGU3NWVjOS1lMGUxLTQ0NzEtOWIyNi05ZjJhNTk0MmUxNjAiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiVmVyaWZpYWJsZUF0dGVzdGF0aW9uIiwiS1ZLUmVnaXN0cmF0aW9uIl0sImlzc3VlciI6ImRpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxIiwiaXNzdWVkIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwidmFsaWRGcm9tIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwiaXNzdWFuY2VEYXRlIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6andrOmV5SnJkSGtpT2lKUFMxQWlMQ0pqY25ZaU9pSkZaREkxTlRFNUlpd2lhMmxrSWpvaWRrcGtWVEJQZEcxVFFWVTRWRTF1YVZScVMySTBUVWRXTXpSWlRtZGliRzVOTTBwTU1rMUxabGxTT0NJc0luZ2lPaUl4VURkSFYwZHNPR0Z5VjNOUlJpMTBRWFEyV1U5T0xXeE5MVTl2UzNGS1RHNWxWbkphVEVoVlNubHZJbjAiLCJrdmtOdW1tZXIiOiIyNDEyOTg3NiIsIm5hYW0iOiJEdXRjaENyYWZ0IEZ1cm5pc2hpbmciLCJyZWNodHN2b3JtIjoiQmVzbG90ZW4gVmVubm9vdHNjaGFwIiwic3RhcnRkYXR1bSI6IjIwMjItMDctMDEiLCJlaW5kZGF0dW0iOiIifSwidGVybXNPZlVzZSI6W3siaWQiOiJodHRwczovL2FwaS1waWxvdC5lYnNpLmV1L3RydXN0ZWQtaXNzdWVycy1yZWdpc3RyeS92NS9pc3N1ZXJzL2RpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxL2F0dHJpYnV0ZXMvZGVhOThhMjIwMTNiMGEyNjgzODNmNWZhZjc4OTJjYjUzMDU4NDI1OGNiOGUzYmZiZTdiMTQ4M2Y3YzY2NjQyMyIsInR5cGUiOiJJc3N1YW5jZUNlcnRpZmljYXRlIn1dLCJjcmVkZW50aWFsU2NoZW1hIjp7ImlkIjoiaHR0cHM6Ly9hcGktcGlsb3QuZWJzaS5ldS90cnVzdGVkLXNjaGVtYXMtcmVnaXN0cnkvdjMvc2NoZW1hcy8weGQyMjA0NjQ3ODE4ZjljMGM5M2Y2NGI3MGYxYzg5MmVhMmE4ZTBhNzQ3Y2VhYTJmNzczNzNiNDE5OTZiYjc2NGQiLCJ0eXBlIjoiRnVsbEpzb25TY2hlbWFWYWxpZGF0b3IyMDIxIn0sImNyZWRlbnRpYWxTdGF0dXMiOnsiaWQiOiJodHRwczovL3dhbGxldC5hY2MuY3JlZGVuY28uY29tL2FwaS9zdGF0dXMvZGY4MDNkZDQtMzJjNi00YTY5LWFmZTUtZDgwN2M2NzAxZWQ3LzEjNjY5MDQiLCJ0eXBlIjoiU3RhdHVzTGlzdDIwMjFFbnRyeSIsInN0YXR1c1B1cnBvc2UiOiJyZXZvY2F0aW9uIiwic3RhdHVzTGlzdEluZGV4Ijo2NjkwNCwic3RhdHVzTGlzdENyZWRlbnRpYWwiOiJodHRwczovL3dhbGxldC5hY2MuY3JlZGVuY28uY29tL2FwaS9zdGF0dXMvZGY4MDNkZDQtMzJjNi00YTY5LWFmZTUtZDgwN2M2NzAxZWQ3LzEifX0sImp0aSI6InVybjp1dWlkOjg4ZTc1ZWM5LWUwZTEtNDQ3MS05YjI2LTlmMmE1OTQyZTE2MCIsImlhdCI6MTcyNjY2MzE2NywibmJmIjoxNzI2NjYzMTY3fQ.AnfEichO9BbwyCbNH9wImUMShEc9IWYISMfIDXsnqgyH8GijwlioeS75HyJasNWbFXWvSFfKpOkTqXxOji0GGw'
      const result: VerificationResult = await agent.cvVerifySchema({ credential: ebsiKVKRegistrationVc, validationPolicy: SchemaValidation.ALWAYS })
      expect(result.result).toBeFalsy()
    })

    it('should not validate schema when schema policy for ebsiKVKRegistrationVc validation is set to ALWAYS and the schema is present', async (): Promise<void> => {
      const ebsiKVKRegistrationVc: OriginalVerifiableCredential =
        'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxIzM2WlJCMlFwUzd3aTBUUWMwQVI0NVM4UXpsS2I5UkdUMXRKUndDNGctakEifQ.eyJpc3MiOiJkaWQ6ZWJzaTp6bUtDOWluM2N2M3k4RFBTRXFEVW5HMSIsInN1YiI6ImRpZDpqd2s6ZXlKcmRIa2lPaUpQUzFBaUxDSmpjbllpT2lKRlpESTFOVEU1SWl3aWEybGtJam9pZGtwa1ZUQlBkRzFUUVZVNFZFMXVhVlJxUzJJMFRVZFdNelJaVG1kaWJHNU5NMHBNTWsxTFpsbFNPQ0lzSW5naU9pSXhVRGRIVjBkc09HRnlWM05SUmkxMFFYUTJXVTlPTFd4TkxVOXZTM0ZLVEc1bFZuSmFURWhWU25sdkluMCIsInZjIjp7IkBjb250ZXh0IjpbImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL3YxIiwiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvZXhhbXBsZXMvdjEiXSwiaWQiOiJ1cm46dXVpZDo4OGU3NWVjOS1lMGUxLTQ0NzEtOWIyNi05ZjJhNTk0MmUxNjAiLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiVmVyaWZpYWJsZUF0dGVzdGF0aW9uIiwiS1ZLUmVnaXN0cmF0aW9uIl0sImlzc3VlciI6ImRpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxIiwiaXNzdWVkIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwidmFsaWRGcm9tIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwiaXNzdWFuY2VEYXRlIjoiMjAyNC0wOS0xOFQxMjozOToyNy4yODMwOTA3NzVaIiwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6andrOmV5SnJkSGtpT2lKUFMxQWlMQ0pqY25ZaU9pSkZaREkxTlRFNUlpd2lhMmxrSWpvaWRrcGtWVEJQZEcxVFFWVTRWRTF1YVZScVMySTBUVWRXTXpSWlRtZGliRzVOTTBwTU1rMUxabGxTT0NJc0luZ2lPaUl4VURkSFYwZHNPR0Z5VjNOUlJpMTBRWFEyV1U5T0xXeE5MVTl2UzNGS1RHNWxWbkphVEVoVlNubHZJbjAiLCJrdmtOdW1tZXIiOiIyNDEyOTg3NiIsIm5hYW0iOiJEdXRjaENyYWZ0IEZ1cm5pc2hpbmciLCJyZWNodHN2b3JtIjoiQmVzbG90ZW4gVmVubm9vdHNjaGFwIiwic3RhcnRkYXR1bSI6IjIwMjItMDctMDEiLCJlaW5kZGF0dW0iOiIifSwidGVybXNPZlVzZSI6W3siaWQiOiJodHRwczovL2FwaS1waWxvdC5lYnNpLmV1L3RydXN0ZWQtaXNzdWVycy1yZWdpc3RyeS92NS9pc3N1ZXJzL2RpZDplYnNpOnptS0M5aW4zY3YzeThEUFNFcURVbkcxL2F0dHJpYnV0ZXMvZGVhOThhMjIwMTNiMGEyNjgzODNmNWZhZjc4OTJjYjUzMDU4NDI1OGNiOGUzYmZiZTdiMTQ4M2Y3YzY2NjQyMyIsInR5cGUiOiJJc3N1YW5jZUNlcnRpZmljYXRlIn1dLCJjcmVkZW50aWFsU2NoZW1hIjp7ImlkIjoiaHR0cHM6Ly9hcGktcGlsb3QuZWJzaS5ldS90cnVzdGVkLXNjaGVtYXMtcmVnaXN0cnkvdjMvc2NoZW1hcy8weGQyMjA0NjQ3ODE4ZjljMGM5M2Y2NGI3MGYxYzg5MmVhMmE4ZTBhNzQ3Y2VhYTJmNzczNzNiNDE5OTZiYjc2NGQiLCJ0eXBlIjoiRnVsbEpzb25TY2hlbWFWYWxpZGF0b3IyMDIxIn0sImNyZWRlbnRpYWxTdGF0dXMiOnsiaWQiOiJodHRwczovL3dhbGxldC5hY2MuY3JlZGVuY28uY29tL2FwaS9zdGF0dXMvZGY4MDNkZDQtMzJjNi00YTY5LWFmZTUtZDgwN2M2NzAxZWQ3LzEjNjY5MDQiLCJ0eXBlIjoiU3RhdHVzTGlzdDIwMjFFbnRyeSIsInN0YXR1c1B1cnBvc2UiOiJyZXZvY2F0aW9uIiwic3RhdHVzTGlzdEluZGV4Ijo2NjkwNCwic3RhdHVzTGlzdENyZWRlbnRpYWwiOiJodHRwczovL3dhbGxldC5hY2MuY3JlZGVuY28uY29tL2FwaS9zdGF0dXMvZGY4MDNkZDQtMzJjNi00YTY5LWFmZTUtZDgwN2M2NzAxZWQ3LzEifX0sImp0aSI6InVybjp1dWlkOjg4ZTc1ZWM5LWUwZTEtNDQ3MS05YjI2LTlmMmE1OTQyZTE2MCIsImlhdCI6MTcyNjY2MzE2NywibmJmIjoxNzI2NjYzMTY3fQ.AnfEichO9BbwyCbNH9wImUMShEc9IWYISMfIDXsnqgyH8GijwlioeS75HyJasNWbFXWvSFfKpOkTqXxOji0GGw'
      const result: VerificationResult = await agent.cvVerifyCredential({
        credential: ebsiKVKRegistrationVc,
        fetchRemoteContexts: true,
        policies: {
          schemaValidation: SchemaValidation.NEVER,
          credentialStatus: false,
          expirationDate: false,
          issuanceDate: false,
        }
      })
      expect(result.result).toBeFalsy()
    })
  })
}
