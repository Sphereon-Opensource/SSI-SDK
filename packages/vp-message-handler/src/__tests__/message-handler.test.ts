import { DIDResolutionResult } from '@veramo/core'
import { Message } from '@veramo/message-handler'
import { IContext, VpMessageHandler } from '../message-handler'

describe('@sphereon/vp-message-handler', () => {
  const vpVelocity =
    '{"exchange_id":"64070d6153ac24b6fcb39f04","jwt_vp":"eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksiLCJqd2siOnsia3R5IjoiRUMiLCJ1c2UiOiJzaWciLCJjcnYiOiJzZWNwMjU2azEiLCJraWQiOiJjYzZiN2IzMi1iMDExLTQwNTgtOTZkYi01OWIyMzA0ZDVjMjMiLCJ4IjoiMzBlY1RXYUZ6MDlyVmNCUm91ZndwZnk3TXJJWVl3VDZsWjFFU09YS3hBayIsInkiOiJqM1lnTFlBdjJkYm92S1dfYkoxYnNsS1Q4MkZDRkpoU2dlNXJIYmg2VmdvIn19.eyJhdWQiOiJkaWQ6aW9uOkVpQ3hVWmliZUtIdFQ1VHVsQVB3QlBCZXdCOFRxT0g0dWV3aUw2aUVHSWc4c1EiLCJzdWIiOiJWdXBpQ215UGwwIiwiaXNzIjoiZGlkOmlvbjpFaUN4VVppYmVLSHRUNVR1bEFQd0JQQmV3QjhUcU9INHVld2lMNmlFR0lnOHNRIiwidnAiOnsidHlwZSI6IlZlcmlmaWFibGVQcmVzZW50YXRpb24iLCJwcmVzZW50YXRpb25fc3VibWlzc2lvbiI6eyJpZCI6IjQ3YjBiZWNjLWRlODItNDljYi04ZDc3LTcyNzA1YmZkN2QzYSIsImRlZmluaXRpb25faWQiOiI2NDA3MGQ2MTUzYWMyNGI2ZmNiMzlmMDQuNjQwNjA1NGE1M2FjMjRiNmZjYjM5ZjAyIiwiZGVzY3JpcHRvcl9tYXAiOlt7ImlkIjoiRHJpdmVyc0xpY2Vuc2VWMS4wIiwicGF0aCI6IiQudmVyaWZpYWJsZUNyZWRlbnRpYWxbMF0iLCJmb3JtYXQiOiJqd3RfdmMifV19LCJ2ZXJpZmlhYmxlQ3JlZGVudGlhbCI6WyJleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpGVXpJMU5rc2lMQ0pyYVdRaU9pSmthV1E2ZG1Wc2IyTnBkSGs2ZGpJNk1IZ3pOR1ptWTJNNVkyTmlNR0k0TUdWalpqbGpNelF4WW1FeU56STJZMlV4TnpsbU0yTTNZVGc1T2pnd09EazROREE1TkRZMk1qUXhPamN3TmpramEyVjVMVEVpZlEuZXlKMll5STZleUpBWTI5dWRHVjRkQ0k2V3lKb2RIUndjem92TDNkM2R5NTNNeTV2Y21jdk1qQXhPQzlqY21Wa1pXNTBhV0ZzY3k5Mk1TSmRMQ0owZVhCbElqcGJJa1J5YVhabGNuTk1hV05sYm5ObFZqRXVNQ0lzSWxabGNtbG1hV0ZpYkdWRGNtVmtaVzUwYVdGc0lsMHNJbWxrSWpvaVpHbGtPblpsYkc5amFYUjVPbll5T2pCNE16Um1abU5qT1dOallqQmlPREJsWTJZNVl6TTBNV0poTWpjeU5tTmxNVGM1WmpOak4yRTRPVG80TURnNU9EUXdPVFEyTmpJME1UbzNNRFk1SWl3aVkzSmxaR1Z1ZEdsaGJGTjBZWFIxY3lJNmV5SjBlWEJsSWpvaVZtVnNiMk5wZEhsU1pYWnZZMkYwYVc5dVRHbHpkRXBoYmpJd01qRWlMQ0pwWkNJNkltVjBhR1Z5WlhWdE9qQjRNVU15T1RRMk1VTTNORGd3WkRGa09EVTNNR1JtTjJNd1FUUkdNekUwUkRCaVJUaGpSRFZDWmk5blpYUlNaWFp2YTJWa1UzUmhkSFZ6UDJGa1pISmxjM005TUhnek5HWm1ZME01UTJOQ01FSTRNR1ZEWmpsRE16UXhZa0V5TnpJMlEwVXhOemxHTTJNM1FUZzVKbXhwYzNSSlpEMHhNell5TlRJMk5qVXdNRFUyTkRZbWFXNWtaWGc5TVRZMUlpd2ljM1JoZEhWelRHbHpkRWx1WkdWNElqb3hOalVzSW5OMFlYUjFjMHhwYzNSRGNtVmtaVzUwYVdGc0lqb2laWFJvWlhKbGRXMDZNSGd4UXpJNU5EWXhRemMwT0RCa01XUTROVGN3WkdZM1l6QkJORVl6TVRSRU1HSkZPR05FTlVKbUwyZGxkRkpsZG05clpXUlRkR0YwZFhNX1lXUmtjbVZ6Y3owd2VETTBabVpqUXpsRFkwSXdRamd3WlVObU9VTXpOREZpUVRJM01qWkRSVEUzT1VZell6ZEJPRGttYkdsemRFbGtQVEV6TmpJMU1qWTJOVEF3TlRZME5pSXNJbXhwYm10RGIyUmxRMjl0YldsMElqb2lSV2xEUjBWS2NIcEZXbTVvU3pabFFtMVpWRVk0Y1UwNGFsUllWbU5rZG1NeWJFOVlSVkJoWm5KT2Mwb3hkejA5SW4wc0lteHBibXREYjJSbFEyOXRiV2wwYldWdWRDSTZleUowZVhCbElqb2lWbVZzYjJOcGRIbERjbVZrWlc1MGFXRnNUR2x1YTBOdlpHVkRiMjF0YVhSdFpXNTBNakF5TWlJc0luWmhiSFZsSWpvaVJXbERSMFZLY0hwRldtNW9TelpsUW0xWlZFWTRjVTA0YWxSWVZtTmtkbU15YkU5WVJWQmhabkpPYzBveGR6MDlJbjBzSW1semMzVmxjaUk2ZXlKcFpDSTZJbVJwWkRwcGIyNDZSV2xEUTA0dE5scFNhRzlLZDBSUWRUZ3pRVkJ3YVVsdFQzUkpVSGxqTVdORE56SnJhRlp4VjNsQ1NUTkdkeUo5TENKamIyNTBaVzUwU0dGemFDSTZleUowZVhCbElqb2lWbVZzYjJOcGRIbERiMjUwWlc1MFNHRnphREl3TWpBaUxDSjJZV3gxWlNJNklqbG1aVEpsTjJGa1ptUXlNV0ZtWVdaa09XVmlZbUZtWkRNM1lXRTNZVFppTm1VMU4yUXpObVEyTXpJeU56UmpPV1JtT0ROaU5tUmtNREExT1RjNE9Ua2lmU3dpWTNKbFpHVnVkR2xoYkZOamFHVnRZU0k2ZXlKcFpDSTZJbWgwZEhCek9pOHZjM1JoWjJsdVozSmxaMmx6ZEhKaGNpNTJaV3h2WTJsMGVXNWxkSGR2Y21zdVptOTFibVJoZEdsdmJpOXpZMmhsYldGekwyUnlhWFpsY25NdGJHbGpaVzV6WlMxMk1TNHdMbk5qYUdWdFlTNXFjMjl1SWl3aWRIbHdaU0k2SWtwemIyNVRZMmhsYldGV1lXeHBaR0YwYjNJeU1ERTRJbjBzSW1OeVpXUmxiblJwWVd4VGRXSnFaV04wSWpwN0ltbGtaVzUwYVdacFpYSWlPaUkxTVRZME5UY3lOalkySWl3aWNHVnljMjl1SWpwN0ltZHBkbVZ1VG1GdFpTSTZJbEpwWTJoaGNtUWdRU0lzSW1aaGJXbHNlVTVoYldVaU9pSlFiM04wYldFaUxDSmlhWEowYUVSaGRHVWlPaUl4T1RjekxURXlMVEUxSW4wc0luWmhiR2xrYVhSNUlqcDdJbVpwY25OMFZtRnNhV1JHY205dElqb2lNakF4Tnkwd09TMHdOaUlzSW5aaGJHbGtWVzUwYVd3aU9pSXlNREkzTFRBNUxUQTJJbjBzSW1GMWRHaHZjbWwwZVNJNmV5SnVZVzFsSWpvaVIyVnRaV1Z1ZEdVZ1FXMXpkR1Z5WkdGdElpd2ljR3hoWTJVaU9uc2lZV1JrY21WemMwTnZkVzUwY25raU9pSk9URVFpZlgwc0ltbGtJam9pTmpObVpqWm1OV1ZsTjJSbFlXTTRNekV5TVRBeVpEYzJJbjE5TENKdVltWWlPakUyTnpjMk9EUTROallzSW1wMGFTSTZJbVJwWkRwMlpXeHZZMmwwZVRwMk1qb3dlRE0wWm1aall6bGpZMkl3WWpnd1pXTm1PV016TkRGaVlUSTNNalpqWlRFM09XWXpZemRoT0RrNk9EQTRPVGcwTURrME5qWXlOREU2TnpBMk9TSXNJbWx6Y3lJNkltUnBaRHBwYjI0NlJXbERRMDR0TmxwU2FHOUtkMFJRZFRnelFWQndhVWx0VDNSSlVIbGpNV05ETnpKcmFGWnhWM2xDU1ROR2R5SXNJbk4xWWlJNklqWXpabVkyWmpWbFpUZGtaV0ZqT0RNeE1qRXdNbVEzTmlJc0ltbGhkQ0k2TVRZM056WTRORGcyTm4wLkdPcXgxY1I3VC11RlNrRFlVaFZScHc3UW5NWW9zRUJlUVVDbmZtUDRsOFVUVHFSS3NhZ3FsZEtKWUI3WDNqdGVjeERvVmdIdGcxa1VJSmFOeXc3VVBnIl19LCJleHAiOjE2Nzg3ODg1OTcsImlhdCI6MTY3ODE4Mzc5NywianRpIjoiNTMzMzJiZDMtY2FmYS00MmVkLTlmZTEtNzdlMTRhYTRiZDVkIn0.nJ0SUDrfLdx40cRKcDYA9jlJzl-D4zQmzXpaXZRPJGd4KVrz8oXUTUdcxbMFMeOqCCNXocxjttIBUFoMcbbVqg","vp":{"@context":["https://www.w3.org/2018/credentials/v1"],"type":"VerifiablePresentation","presentation_submission":{"id":"47b0becc-de82-49cb-8d77-72705bfd7d3a","definition_id":"64070d6153ac24b6fcb39f04.6406054a53ac24b6fcb39f02","descriptor_map":[{"id":"DriversLicenseV1.0","path":"$.verifiableCredential[0]","format":"jwt_vc"}]},"verifiableCredential":["eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksiLCJraWQiOiJkaWQ6dmVsb2NpdHk6djI6MHgzNGZmY2M5Y2NiMGI4MGVjZjljMzQxYmEyNzI2Y2UxNzlmM2M3YTg5OjgwODk4NDA5NDY2MjQxOjcwNjkja2V5LTEifQ.eyJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSJdLCJ0eXBlIjpbIkRyaXZlcnNMaWNlbnNlVjEuMCIsIlZlcmlmaWFibGVDcmVkZW50aWFsIl0sImlkIjoiZGlkOnZlbG9jaXR5OnYyOjB4MzRmZmNjOWNjYjBiODBlY2Y5YzM0MWJhMjcyNmNlMTc5ZjNjN2E4OTo4MDg5ODQwOTQ2NjI0MTo3MDY5IiwiY3JlZGVudGlhbFN0YXR1cyI6eyJ0eXBlIjoiVmVsb2NpdHlSZXZvY2F0aW9uTGlzdEphbjIwMjEiLCJpZCI6ImV0aGVyZXVtOjB4MUMyOTQ2MUM3NDgwZDFkODU3MGRmN2MwQTRGMzE0RDBiRThjRDVCZi9nZXRSZXZva2VkU3RhdHVzP2FkZHJlc3M9MHgzNGZmY0M5Q2NCMEI4MGVDZjlDMzQxYkEyNzI2Q0UxNzlGM2M3QTg5Jmxpc3RJZD0xMzYyNTI2NjUwMDU2NDYmaW5kZXg9MTY1Iiwic3RhdHVzTGlzdEluZGV4IjoxNjUsInN0YXR1c0xpc3RDcmVkZW50aWFsIjoiZXRoZXJldW06MHgxQzI5NDYxQzc0ODBkMWQ4NTcwZGY3YzBBNEYzMTREMGJFOGNENUJmL2dldFJldm9rZWRTdGF0dXM_YWRkcmVzcz0weDM0ZmZjQzlDY0IwQjgwZUNmOUMzNDFiQTI3MjZDRTE3OUYzYzdBODkmbGlzdElkPTEzNjI1MjY2NTAwNTY0NiIsImxpbmtDb2RlQ29tbWl0IjoiRWlDR0VKcHpFWm5oSzZlQm1ZVEY4cU04alRYVmNkdmMybE9YRVBhZnJOc0oxdz09In0sImxpbmtDb2RlQ29tbWl0bWVudCI6eyJ0eXBlIjoiVmVsb2NpdHlDcmVkZW50aWFsTGlua0NvZGVDb21taXRtZW50MjAyMiIsInZhbHVlIjoiRWlDR0VKcHpFWm5oSzZlQm1ZVEY4cU04alRYVmNkdmMybE9YRVBhZnJOc0oxdz09In0sImlzc3VlciI6eyJpZCI6ImRpZDppb246RWlDQ04tNlpSaG9Kd0RQdTgzQVBwaUltT3RJUHljMWNDNzJraFZxV3lCSTNGdyJ9LCJjb250ZW50SGFzaCI6eyJ0eXBlIjoiVmVsb2NpdHlDb250ZW50SGFzaDIwMjAiLCJ2YWx1ZSI6IjlmZTJlN2FkZmQyMWFmYWZkOWViYmFmZDM3YWE3YTZiNmU1N2QzNmQ2MzIyNzRjOWRmODNiNmRkMDA1OTc4OTkifSwiY3JlZGVudGlhbFNjaGVtYSI6eyJpZCI6Imh0dHBzOi8vc3RhZ2luZ3JlZ2lzdHJhci52ZWxvY2l0eW5ldHdvcmsuZm91bmRhdGlvbi9zY2hlbWFzL2RyaXZlcnMtbGljZW5zZS12MS4wLnNjaGVtYS5qc29uIiwidHlwZSI6Ikpzb25TY2hlbWFWYWxpZGF0b3IyMDE4In0sImNyZWRlbnRpYWxTdWJqZWN0Ijp7ImlkZW50aWZpZXIiOiI1MTY0NTcyNjY2IiwicGVyc29uIjp7ImdpdmVuTmFtZSI6IlJpY2hhcmQgQSIsImZhbWlseU5hbWUiOiJQb3N0bWEiLCJiaXJ0aERhdGUiOiIxOTczLTEyLTE1In0sInZhbGlkaXR5Ijp7ImZpcnN0VmFsaWRGcm9tIjoiMjAxNy0wOS0wNiIsInZhbGlkVW50aWwiOiIyMDI3LTA5LTA2In0sImF1dGhvcml0eSI6eyJuYW1lIjoiR2VtZWVudGUgQW1zdGVyZGFtIiwicGxhY2UiOnsiYWRkcmVzc0NvdW50cnkiOiJOTEQifX0sImlkIjoiNjNmZjZmNWVlN2RlYWM4MzEyMTAyZDc2In19LCJuYmYiOjE2Nzc2ODQ4NjYsImp0aSI6ImRpZDp2ZWxvY2l0eTp2MjoweDM0ZmZjYzljY2IwYjgwZWNmOWMzNDFiYTI3MjZjZTE3OWYzYzdhODk6ODA4OTg0MDk0NjYyNDE6NzA2OSIsImlzcyI6ImRpZDppb246RWlDQ04tNlpSaG9Kd0RQdTgzQVBwaUltT3RJUHljMWNDNzJraFZxV3lCSTNGdyIsInN1YiI6IjYzZmY2ZjVlZTdkZWFjODMxMjEwMmQ3NiIsImlhdCI6MTY3NzY4NDg2Nn0.GOqx1cR7T-uFSkDYUhVRpw7QnMYosEBeQUCnfmP4l8UTTqRKsagqldKJYB7X3jtecxDoVgHtg1kUIJaNyw7UPg"],"id":"53332bd3-cafa-42ed-9fe1-77e14aa4bd5d","holder":"did:ion:EiCxUZibeKHtT5TulAPwBPBewB8TqOH4uewiL6iEGIg8sQ","verifier":"did:ion:EiCxUZibeKHtT5TulAPwBPBewB8TqOH4uewiL6iEGIg8sQ","issued":"2023-03-07T10:09:57.000Z","expirationDate":"2023-03-14T10:09:57.000Z"}}'
  const resultRaw =
    'eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksiLCJqd2siOnsia3R5IjoiRUMiLCJ1c2UiOiJzaWciLCJjcnYiOiJzZWNwMjU2azEiLCJraWQiOiJjYzZiN2IzMi1iMDExLTQwNTgtOTZkYi01OWIyMzA0ZDVjMjMiLCJ4IjoiMzBlY1RXYUZ6MDlyVmNCUm91ZndwZnk3TXJJWVl3VDZsWjFFU09YS3hBayIsInkiOiJqM1lnTFlBdjJkYm92S1dfYkoxYnNsS1Q4MkZDRkpoU2dlNXJIYmg2VmdvIn19.eyJhdWQiOiJkaWQ6aW9uOkVpQ3hVWmliZUtIdFQ1VHVsQVB3QlBCZXdCOFRxT0g0dWV3aUw2aUVHSWc4c1EiLCJzdWIiOiJWdXBpQ215UGwwIiwiaXNzIjoiZGlkOmlvbjpFaUN4VVppYmVLSHRUNVR1bEFQd0JQQmV3QjhUcU9INHVld2lMNmlFR0lnOHNRIiwidnAiOnsidHlwZSI6IlZlcmlmaWFibGVQcmVzZW50YXRpb24iLCJwcmVzZW50YXRpb25fc3VibWlzc2lvbiI6eyJpZCI6IjQ3YjBiZWNjLWRlODItNDljYi04ZDc3LTcyNzA1YmZkN2QzYSIsImRlZmluaXRpb25faWQiOiI2NDA3MGQ2MTUzYWMyNGI2ZmNiMzlmMDQuNjQwNjA1NGE1M2FjMjRiNmZjYjM5ZjAyIiwiZGVzY3JpcHRvcl9tYXAiOlt7ImlkIjoiRHJpdmVyc0xpY2Vuc2VWMS4wIiwicGF0aCI6IiQudmVyaWZpYWJsZUNyZWRlbnRpYWxbMF0iLCJmb3JtYXQiOiJqd3RfdmMifV19LCJ2ZXJpZmlhYmxlQ3JlZGVudGlhbCI6WyJleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpGVXpJMU5rc2lMQ0pyYVdRaU9pSmthV1E2ZG1Wc2IyTnBkSGs2ZGpJNk1IZ3pOR1ptWTJNNVkyTmlNR0k0TUdWalpqbGpNelF4WW1FeU56STJZMlV4TnpsbU0yTTNZVGc1T2pnd09EazROREE1TkRZMk1qUXhPamN3TmpramEyVjVMVEVpZlEuZXlKMll5STZleUpBWTI5dWRHVjRkQ0k2V3lKb2RIUndjem92TDNkM2R5NTNNeTV2Y21jdk1qQXhPQzlqY21Wa1pXNTBhV0ZzY3k5Mk1TSmRMQ0owZVhCbElqcGJJa1J5YVhabGNuTk1hV05sYm5ObFZqRXVNQ0lzSWxabGNtbG1hV0ZpYkdWRGNtVmtaVzUwYVdGc0lsMHNJbWxrSWpvaVpHbGtPblpsYkc5amFYUjVPbll5T2pCNE16Um1abU5qT1dOallqQmlPREJsWTJZNVl6TTBNV0poTWpjeU5tTmxNVGM1WmpOak4yRTRPVG80TURnNU9EUXdPVFEyTmpJME1UbzNNRFk1SWl3aVkzSmxaR1Z1ZEdsaGJGTjBZWFIxY3lJNmV5SjBlWEJsSWpvaVZtVnNiMk5wZEhsU1pYWnZZMkYwYVc5dVRHbHpkRXBoYmpJd01qRWlMQ0pwWkNJNkltVjBhR1Z5WlhWdE9qQjRNVU15T1RRMk1VTTNORGd3WkRGa09EVTNNR1JtTjJNd1FUUkdNekUwUkRCaVJUaGpSRFZDWmk5blpYUlNaWFp2YTJWa1UzUmhkSFZ6UDJGa1pISmxjM005TUhnek5HWm1ZME01UTJOQ01FSTRNR1ZEWmpsRE16UXhZa0V5TnpJMlEwVXhOemxHTTJNM1FUZzVKbXhwYzNSSlpEMHhNell5TlRJMk5qVXdNRFUyTkRZbWFXNWtaWGc5TVRZMUlpd2ljM1JoZEhWelRHbHpkRWx1WkdWNElqb3hOalVzSW5OMFlYUjFjMHhwYzNSRGNtVmtaVzUwYVdGc0lqb2laWFJvWlhKbGRXMDZNSGd4UXpJNU5EWXhRemMwT0RCa01XUTROVGN3WkdZM1l6QkJORVl6TVRSRU1HSkZPR05FTlVKbUwyZGxkRkpsZG05clpXUlRkR0YwZFhNX1lXUmtjbVZ6Y3owd2VETTBabVpqUXpsRFkwSXdRamd3WlVObU9VTXpOREZpUVRJM01qWkRSVEUzT1VZell6ZEJPRGttYkdsemRFbGtQVEV6TmpJMU1qWTJOVEF3TlRZME5pSXNJbXhwYm10RGIyUmxRMjl0YldsMElqb2lSV2xEUjBWS2NIcEZXbTVvU3pabFFtMVpWRVk0Y1UwNGFsUllWbU5rZG1NeWJFOVlSVkJoWm5KT2Mwb3hkejA5SW4wc0lteHBibXREYjJSbFEyOXRiV2wwYldWdWRDSTZleUowZVhCbElqb2lWbVZzYjJOcGRIbERjbVZrWlc1MGFXRnNUR2x1YTBOdlpHVkRiMjF0YVhSdFpXNTBNakF5TWlJc0luWmhiSFZsSWpvaVJXbERSMFZLY0hwRldtNW9TelpsUW0xWlZFWTRjVTA0YWxSWVZtTmtkbU15YkU5WVJWQmhabkpPYzBveGR6MDlJbjBzSW1semMzVmxjaUk2ZXlKcFpDSTZJbVJwWkRwcGIyNDZSV2xEUTA0dE5scFNhRzlLZDBSUWRUZ3pRVkJ3YVVsdFQzUkpVSGxqTVdORE56SnJhRlp4VjNsQ1NUTkdkeUo5TENKamIyNTBaVzUwU0dGemFDSTZleUowZVhCbElqb2lWbVZzYjJOcGRIbERiMjUwWlc1MFNHRnphREl3TWpBaUxDSjJZV3gxWlNJNklqbG1aVEpsTjJGa1ptUXlNV0ZtWVdaa09XVmlZbUZtWkRNM1lXRTNZVFppTm1VMU4yUXpObVEyTXpJeU56UmpPV1JtT0ROaU5tUmtNREExT1RjNE9Ua2lmU3dpWTNKbFpHVnVkR2xoYkZOamFHVnRZU0k2ZXlKcFpDSTZJbWgwZEhCek9pOHZjM1JoWjJsdVozSmxaMmx6ZEhKaGNpNTJaV3h2WTJsMGVXNWxkSGR2Y21zdVptOTFibVJoZEdsdmJpOXpZMmhsYldGekwyUnlhWFpsY25NdGJHbGpaVzV6WlMxMk1TNHdMbk5qYUdWdFlTNXFjMjl1SWl3aWRIbHdaU0k2SWtwemIyNVRZMmhsYldGV1lXeHBaR0YwYjNJeU1ERTRJbjBzSW1OeVpXUmxiblJwWVd4VGRXSnFaV04wSWpwN0ltbGtaVzUwYVdacFpYSWlPaUkxTVRZME5UY3lOalkySWl3aWNHVnljMjl1SWpwN0ltZHBkbVZ1VG1GdFpTSTZJbEpwWTJoaGNtUWdRU0lzSW1aaGJXbHNlVTVoYldVaU9pSlFiM04wYldFaUxDSmlhWEowYUVSaGRHVWlPaUl4T1RjekxURXlMVEUxSW4wc0luWmhiR2xrYVhSNUlqcDdJbVpwY25OMFZtRnNhV1JHY205dElqb2lNakF4Tnkwd09TMHdOaUlzSW5aaGJHbGtWVzUwYVd3aU9pSXlNREkzTFRBNUxUQTJJbjBzSW1GMWRHaHZjbWwwZVNJNmV5SnVZVzFsSWpvaVIyVnRaV1Z1ZEdVZ1FXMXpkR1Z5WkdGdElpd2ljR3hoWTJVaU9uc2lZV1JrY21WemMwTnZkVzUwY25raU9pSk9URVFpZlgwc0ltbGtJam9pTmpObVpqWm1OV1ZsTjJSbFlXTTRNekV5TVRBeVpEYzJJbjE5TENKdVltWWlPakUyTnpjMk9EUTROallzSW1wMGFTSTZJbVJwWkRwMlpXeHZZMmwwZVRwMk1qb3dlRE0wWm1aall6bGpZMkl3WWpnd1pXTm1PV016TkRGaVlUSTNNalpqWlRFM09XWXpZemRoT0RrNk9EQTRPVGcwTURrME5qWXlOREU2TnpBMk9TSXNJbWx6Y3lJNkltUnBaRHBwYjI0NlJXbERRMDR0TmxwU2FHOUtkMFJRZFRnelFWQndhVWx0VDNSSlVIbGpNV05ETnpKcmFGWnhWM2xDU1ROR2R5SXNJbk4xWWlJNklqWXpabVkyWmpWbFpUZGtaV0ZqT0RNeE1qRXdNbVEzTmlJc0ltbGhkQ0k2TVRZM056WTRORGcyTm4wLkdPcXgxY1I3VC11RlNrRFlVaFZScHc3UW5NWW9zRUJlUVVDbmZtUDRsOFVUVHFSS3NhZ3FsZEtKWUI3WDNqdGVjeERvVmdIdGcxa1VJSmFOeXc3VVBnIl19LCJleHAiOjE2Nzg3ODg1OTcsImlhdCI6MTY3ODE4Mzc5NywianRpIjoiNTMzMzJiZDMtY2FmYS00MmVkLTlmZTEtNzdlMTRhYTRiZDVkIn0.nJ0SUDrfLdx40cRKcDYA9jlJzl-D4zQmzXpaXZRPJGd4KVrz8oXUTUdcxbMFMeOqCCNXocxjttIBUFoMcbbVqg'

  const context: IContext = {
    agent: {
      getSchema: jest.fn(),
      execute: jest.fn(),
      availableMethods: jest.fn(),
      emit: jest.fn(),
      resolveDid: async (args?): Promise<DIDResolutionResult> => {
        if (!args?.didUrl) throw Error('DID required')

        return {
          didResolutionMetadata: {},
          didDocumentMetadata: {},
          didDocument: {
            '@context': 'https://w3id.org/did/v1',
            id: args?.didUrl,
            verificationMethod: [
              {
                id: `${args?.didUrl}#owner`,
                type: 'EcdsaSecp256k1RecoveryMethod2020',
                controller: args?.didUrl,
                blockchainAccountId: `${args?.didUrl.slice(-42)}@eip155:1`,
              },
            ],
            authentication: [`${args?.didUrl}#owner`],
          },
        }
      },
      getDIDComponentById: jest.fn(),
    },
  }

  it('should unwrap jwt_vp', async () => {
    const mockNextHandler = {
      setNext: jest.fn(),
      handle: jest.fn(),
    }
    const handler = new VpMessageHandler()
    handler.setNext(mockNextHandler)

    const message = new Message({ raw: vpVelocity, metaData: [{ type: 'test' }] })
    await handler.handle(message, context)
    expect(message.raw).toEqual(resultRaw)
    expect(message.metaData).toBeDefined()
    expect(message.metaData!![1].type).toEqual('JWT')
  })
})
