import { com } from '@sphereon/kmp-mdl-mdoc'
import { CoseCryptoService } from '../src/functions'
import { funkePdTestVector, funkeTestCA, sphereonCA } from './shared/testvectors'
import CoseSign1Cbor = com.sphereon.crypto.cose.CoseSign1Cbor
import CoseSignatureAlgorithm = com.sphereon.crypto.cose.CoseSignatureAlgorithm
import Jwk = com.sphereon.crypto.jose.Jwk
import decodeFrom = com.sphereon.kmp.decodeFrom
import encodeTo = com.sphereon.kmp.encodeTo
import Encoding = com.sphereon.kmp.Encoding
import IssuerSignedCbor = com.sphereon.mdoc.data.device.IssuerSignedCbor
import CoseSign1Json = com.sphereon.crypto.cose.CoseSign1Json
import ValidationsJS = com.sphereon.mdoc.ValidationsJS
import Oid4VPPresentationSubmission = com.sphereon.mdoc.oid4vp.Oid4VPPresentationSubmission
import DeviceResponseCbor = com.sphereon.mdoc.data.device.DeviceResponseCbor

describe('Issuer Auth', (): void => {
  const coseCrypto = new CoseCryptoService()

  it('should decode and encode ISO Test Vector', () => {
    const coseSign = CoseSign1Cbor.Static.cborDecode<any>(decodeFrom(iso18013_5_IssuerAuthTestVector, Encoding.HEX))
    expect(coseSign).toBeDefined()
    console.log(coseSign.toJson().toJsonDTO<CoseSign1Json>())
    expect(iso18013_5_IssuerAuthTestVector).toEqual(encodeTo(coseSign.cborEncode(), Encoding.HEX))
    expect(iso18013_5_SignatureStructureTestVector).toEqual(encodeTo(coseSign.toSignature1Structure().cborEncode(), Encoding.HEX))
    //@ts-ignore
    expect(iso18013_5_SignatureStructureTestVector).toEqual(coseSign.toBeSignedJson(null, CoseSignatureAlgorithm.ES256).hexValue)
  })

  it('test', () => {
    const jwk = Jwk.Static.fromJson({
      kty: 'EC',
      kid: '11',
      crv: 'P-256',
      x: 'usWxHK2PmfnHKwXPS54m0kTcGJ90UiglWiGahtagnv8',
      y: 'IBOL-C3BttVivg-lSreASjpkttcsz-1rb7btKLv8EX4',
      // "d":"V8kgd2ZBRuh2dgyVINBUqpPDr7BOMGcF22CQMIUHtNM" // No private key, as we check for them explicitly
    })
    const cbor = jwk.jwkToCoseKeyCbor()
    expect(cbor).toBeDefined()
  })

  it('should verify IETF Test Vector', async () => {
    const ietfTestVector =
      '8443a10126a10442313154546869732069732074686520636f6e74656e742e58408eb33e4ca31d1c465ab05aac34cc6b23d58fef5c083106c4d25a91aef0b0117e2af9a291aa32e14ab834dc56ed2a223444547e01f11d3b0916e5a4c345cacb36'
    const ietfSignature =
      '8eb33e4ca31d1c465ab05aac34cc6b23d58fef5c083106c4d25a91aef0b0117e2af9a291aa32e14ab834dc56ed2a223444547e01f11d3b0916e5a4c345cacb36'

    const issuerAuth = CoseSign1Cbor.Static.cborDecode(decodeFrom(ietfTestVector, Encoding.HEX)) as CoseSign1Cbor<any>

    expect(issuerAuth.signature.encodeTo(Encoding.HEX)).toEqual(ietfSignature)

    await expect(
      coseCrypto.verify1<any>(issuerAuth, {
        key: Jwk.Static.fromJson({
          kty: 'EC',
          kid: '11',
          crv: 'P-256',
          x: 'usWxHK2PmfnHKwXPS54m0kTcGJ90UiglWiGahtagnv8',
          y: 'IBOL-C3BttVivg-lSreASjpkttcsz-1rb7btKLv8EX4',
          // 'd': 'V8kgd2ZBRuh2dgyVINBUqpPDr7BOMGcF22CQMIUHtNM'  // do not pass in the private key, as we check for that
        }).jwkToCoseKeyCbor(),
      }),
    ).resolves.toMatchObject({
      critical: true,
      error: false,
    })
  })

  it('should verify Issuer Signed Test Vector', async () => {
    const funkeTestVector =
      ''
    const issuerSigned = IssuerSignedCbor.Static.cborDecode(decodeFrom(funkeTestVector, Encoding.HEX))
    await expect(coseCrypto.verify1(issuerSigned.issuerAuth)).resolves.toMatchObject({
      critical: true,
      error: false,
      message: "Signature of 'C=DE,O=Bundesdruckerei GmbH,OU=I,CN=SPRIND Funke EUDI Wallet Prototype Issuer' was valid",
    })
  })

  it('should verify Funke Issuer Signed Test Vector of 12-08-2024', async () => {
    const issuerSigned = IssuerSignedCbor.Static.cborDecode(decodeFrom(funkePidIssuerSignedTestVector_20240812, Encoding.BASE64URL))
    await expect(coseCrypto.verify1(issuerSigned.issuerAuth)).resolves.toMatchObject({
      critical: true,
      error: false,
      message: "Signature of 'C=DE,O=Bundesdruckerei GmbH,OU=I,CN=SPRIND Funke EUDI Wallet Prototype Issuer' was valid",
    })
    console.log(JSON.stringify(issuerSigned.toJson(), null, 2))
  })

  it('should show a full flow from issuer to holder to RP', async () => {
    // Issuer signed according to 18013-7 in base64url
    const issuerSigned = IssuerSignedCbor.Static.cborDecode(decodeFrom(funkePidIssuerSignedTestVector_20240812, Encoding.BASE64URL))
    // Let's create an mdoc from it.
    const holderMdoc = issuerSigned.toDocument()

    // Let's perform the validations. Since our IsserSigned is not valid anymore we expect 1 error in the result
    const validations = await ValidationsJS.fromDocumentAsync(holderMdoc, null, [sphereonCA, funkeTestCA])
    expect(validations.error).toEqual(true)
    const errors = validations.verifications.filter((ver) => ver.error)
    expect(1).toEqual(errors.length)

    // Let's prepare to present
    const holderDeviceResponse = holderMdoc.toSingleDocDeviceResponse(funkePdTestVector)
    const vp_token = encodeTo(holderDeviceResponse.cborEncode(), Encoding.BASE64URL)
    const presentation_submission = Oid4VPPresentationSubmission.Static.fromPresentationDefinition(funkePdTestVector, 'random-id')
    const authResponse = { vp_token, presentation_submission }

    // RP side
    const rpDeviceResponse = DeviceResponseCbor.Static.cborDecode(decodeFrom(authResponse.vp_token, Encoding.BASE64URL))
    const rpMdoc = rpDeviceResponse.documents![0]!
    // selective disclosure has been applied, so they should not be the same
    expect(holderMdoc).not.toEqual(rpMdoc)
    expect(rpMdoc.toJson().issuerSigned.nameSpaces!.asJsMapView().get('eu.europa.ec.eudi.pid.1')!.length).toEqual(7)
    const rpPresentationSubmission = Oid4VPPresentationSubmission.Static.fromDTO(authResponse.presentation_submission)
    expect(rpPresentationSubmission).toEqual(presentation_submission)
    rpPresentationSubmission.assertValid(funkePdTestVector)
  })
})

const iso18013_5_IssuerAuthTestVector =
  '8443a10126a118215901f3308201ef30820195a00302010202143c4416eed784f3b413e48f56f075abfa6d87e' +
  'b84300a06082a8648ce3d04030230233114301206035504030c0b75746f7069612069616361310b3009060355' +
  '040613025553301e170d3230313030313030303030305a170d3231313030313030303030305a302131123010' +
  '06035504030c0975746f706961206473310b30090603550406130255533059301306072a8648ce3d020106082' +
  'a8648ce3d03010703420004ace7ab7340e5d9648c5a72a9a6f56745c7aad436a03a43efea77b5fa7b88f0197d' +
  '57d8983e1b37d3a539f4d588365e38cbbf5b94d68c547b5bc8731dcd2f146ba381a83081a5301e0603551d120' +
  '417301581136578616d706c65406578616d706c652e636f6d301c0603551d1f041530133011a00fa00d820b65' +
  '78616d706c652e636f6d301d0603551d0e0416041414e29017a6c35621ffc7a686b7b72db06cd12351301f0603' +
  '551d2304183016801454fa2383a04c28e0d930792261c80c4881d2c00b300e0603551d0f0101ff040403020780' +
  '30150603551d250101ff040b3009060728818c5d050102300a06082a8648ce3d04030203480030450221009771' +
  '7ab9016740c8d7bcdaa494a62c053bbdecce1383c1aca72ad08dbc04cbb202203bad859c13a63c6d1ad67d814d' +
  '43e2425caf90d422422c04a8ee0304c0d3a68d5903a2d81859039da66776657273696f6e63312e306f64696765' +
  '7374416c676f726974686d675348412d3235366c76616c756544696765737473a2716f72672e69736f2e313830' +
  '31332e352e31ad00582075167333b47b6c2bfb86eccc1f438cf57af055371ac55e1e359e20f254adcebf015820' +
  '67e539d6139ebd131aef441b445645dd831b2b375b390ca5ef6279b205ed45710258203394372ddb78053f36d5' +
  'd869780e61eda313d44a392092ad8e0527a2fbfe55ae0358202e35ad3c4e514bb67b1a9db51ce74e4cb9b7146e' +
  '41ac52dac9ce86b8613db555045820ea5c3304bb7c4a8dcb51c4c13b65264f845541341342093cca786e058fac' +
  '2d59055820fae487f68b7a0e87a749774e56e9e1dc3a8ec7b77e490d21f0e1d3475661aa1d0658207d83e507ae' +
  '77db815de4d803b88555d0511d894c897439f5774056416a1c7533075820f0549a145f1cf75cbeeffa881d4857d' +
  'd438d627cf32174b1731c4c38e12ca936085820b68c8afcb2aaf7c581411d2877def155be2eb121a42bc9ba5b7' +
  '312377e068f660958200b3587d1dd0c2a07a35bfb120d99a0abfb5df56865bb7fa15cc8b56a66df6e0c0a5820c' +
  '98a170cf36e11abb724e98a75a5343dfa2b6ed3df2ecfbb8ef2ee55dd41c8810b5820b57dd036782f7b14c6a30' +
  'faaaae6ccd5054ce88bdfa51a016ba75eda1edea9480c5820651f8736b18480fe252a03224ea087b5d10ca5485' +
  '146c67c74ac4ec3112d4c3a746f72672e69736f2e31383031332e352e312e5553a4005820d80b83d25173c484c' +
  '5640610ff1a31c949c1d934bf4cf7f18d5223b15dd4f21c0158204d80e1e2e4fb246d97895427ce7000bb59bb24' +
  'c8cd003ecf94bf35bbd2917e340258208b331f3b685bca372e85351a25c9484ab7afcdf0d2233105511f778d98' +
  'c2f544035820c343af1bd1690715439161aba73702c474abf992b20c9fb55c36a336ebe01a876d646576696365' +
  '4b6579496e666fa1696465766963654b6579a40102200121582096313d6c63e24e3372742bfdb1a33ba2c897dc' +
  'd68ab8c753e4fbd48dca6b7f9a2258201fb3269edd418857de1b39a4e4a44b92fa484caa722c228288f01d0c03' +
  'a2c3d667646f6354797065756f72672e69736f2e31383031332e352e312e6d444c6c76616c6964697479496e66' +
  '6fa3667369676e6564c074323032302d31302d30315431333a33303a30325a6976616c696446726f6dc0743230' +
  '32302d31302d30315431333a33303a30325a6a76616c6964556e74696cc074323032312d31302d30315431333a' +
  '33303a30325a584059e64205df1e2f708dd6db0847aed79fc7c0201d80fa55badcaf2e1bcf5902e1e5a62e4832' +
  '044b890ad85aa53f129134775d733754d7cb7a413766aeff13cb2e'.replace(' ', '')

const iso18013_5_SignatureStructureTestVector =
  '846a5369676e61747572653143a10126405903a2d81859039da66776657273696f6e63312e3' +
  '06f646967657374416c676f726974686d675348412d3235366c76616c756544696765737473a2716f72672e697' +
  '36f2e31383031332e352e31ad00582075167333b47b6c2bfb86eccc1f438cf57af055371ac55e1e359e20f254a' +
  'dcebf01582067e539d6139ebd131aef441b445645dd831b2b375b390ca5ef6279b205ed45710258203394372dd' +
  'b78053f36d5d869780e61eda313d44a392092ad8e0527a2fbfe55ae0358202e35ad3c4e514bb67b1a9db51ce74' +
  'e4cb9b7146e41ac52dac9ce86b8613db555045820ea5c3304bb7c4a8dcb51c4c13b65264f845541341342093cc' +
  'a786e058fac2d59055820fae487f68b7a0e87a749774e56e9e1dc3a8ec7b77e490d21f0e1d3475661aa1d06582' +
  '07d83e507ae77db815de4d803b88555d0511d894c897439f5774056416a1c7533075820f0549a145f1cf75cbee' +
  'ffa881d4857dd438d627cf32174b1731c4c38e12ca936085820b68c8afcb2aaf7c581411d2877def155be2eb121' +
  'a42bc9ba5b7312377e068f660958200b3587d1dd0c2a07a35bfb120d99a0abfb5df56865bb7fa15cc8b56a66df' +
  '6e0c0a5820c98a170cf36e11abb724e98a75a5343dfa2b6ed3df2ecfbb8ef2ee55dd41c8810b5820b57dd03678' +
  '2f7b14c6a30faaaae6ccd5054ce88bdfa51a016ba75eda1edea9480c5820651f8736b18480fe252a03224ea087' +
  'b5d10ca5485146c67c74ac4ec3112d4c3a746f72672e69736f2e31383031332e352e312e5553a4005820d80b83' +
  'd25173c484c5640610ff1a31c949c1d934bf4cf7f18d5223b15dd4f21c0158204d80e1e2e4fb246d97895427ce7' +
  '000bb59bb24c8cd003ecf94bf35bbd2917e340258208b331f3b685bca372e85351a25c9484ab7afcdf0d223310' +
  '5511f778d98c2f544035820c343af1bd1690715439161aba73702c474abf992b20c9fb55c36a336ebe01a876d6' +
  '465766963654b6579496e666fa1696465766963654b6579a40102200121582096313d6c63e24e3372742bfdb1a' +
  '33ba2c897dcd68ab8c753e4fbd48dca6b7f9a2258201fb3269edd418857de1b39a4e4a44b92fa484caa722c228' +
  '288f01d0c03a2c3d667646f6354797065756f72672e69736f2e31383031332e352e312e6d444c6c76616c69646' +
  '97479496e666fa3667369676e6564c074323032302d31302d30315431333a33303a30325a6976616c696446726' +
  'f6dc074323032302d31302d30315431333a33303a30325a6a76616c6964556e74696cc074323032312d31302d3' +
  '0315431333a33303a30325a'.replace(' ', '')

const funkePidIssuerSignedTestVector_20240812 =
  'omppc3N1ZXJBdXRohEOhASahGCGCWQJ4MIICdDCCAhugAwIBAgIBAjAKBggqhkjOPQQDAjCBiDELMAkGA1UEBhMCREUxDzANBgNVBAcMBkJlcmxpbjEdMBsGA1UECgwUQnVuZGVzZHJ1Y2tlcmVpIEdtYkgxETAPBgNVBAsMCFQgQ1MgSURFMTYwNAYDVQQDDC1TUFJJTkQgRnVua2UgRVVESSBXYWxsZXQgUHJvdG90eXBlIElzc3VpbmcgQ0EwHhcNMjQwNTMxMDgxMzE3WhcNMjUwNzA1MDgxMzE3WjBsMQswCQYDVQQGEwJERTEdMBsGA1UECgwUQnVuZGVzZHJ1Y2tlcmVpIEdtYkgxCjAIBgNVBAsMAUkxMjAwBgNVBAMMKVNQUklORCBGdW5rZSBFVURJIFdhbGxldCBQcm90b3R5cGUgSXNzdWVyMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEOFBq4YMKg4w5fTifsytwBuJf_7E7VhRPXiNm52S3q1ETIgBdXyDK3kVxGxgeHPivLP3uuMvS6iDEc7qMxmvduKOBkDCBjTAdBgNVHQ4EFgQUiPhCkLErDXPLW2_J0WVeghyw-mIwDAYDVR0TAQH_BAIwADAOBgNVHQ8BAf8EBAMCB4AwLQYDVR0RBCYwJIIiZGVtby5waWQtaXNzdWVyLmJ1bmRlc2RydWNrZXJlaS5kZTAfBgNVHSMEGDAWgBTUVhjAiTjoDliEGMl2Yr-ru8WQvjAKBggqhkjOPQQDAgNHADBEAiAbf5TzkcQzhfWoIoyi1VN7d8I9BsFKm1MWluRph2byGQIgKYkdrNf2xXPjVSbjW_U_5S5vAEC5XxcOanusOBroBbVZAn0wggJ5MIICIKADAgECAhQHkT1BVm2ZRhwO0KMoH8fdVC_vaDAKBggqhkjOPQQDAjCBiDELMAkGA1UEBhMCREUxDzANBgNVBAcMBkJlcmxpbjEdMBsGA1UECgwUQnVuZGVzZHJ1Y2tlcmVpIEdtYkgxETAPBgNVBAsMCFQgQ1MgSURFMTYwNAYDVQQDDC1TUFJJTkQgRnVua2UgRVVESSBXYWxsZXQgUHJvdG90eXBlIElzc3VpbmcgQ0EwHhcNMjQwNTMxMDY0ODA5WhcNMzQwNTI5MDY0ODA5WjCBiDELMAkGA1UEBhMCREUxDzANBgNVBAcMBkJlcmxpbjEdMBsGA1UECgwUQnVuZGVzZHJ1Y2tlcmVpIEdtYkgxETAPBgNVBAsMCFQgQ1MgSURFMTYwNAYDVQQDDC1TUFJJTkQgRnVua2UgRVVESSBXYWxsZXQgUHJvdG90eXBlIElzc3VpbmcgQ0EwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARgbN3AUOdzv4qfmJsC8I4zyR7vtVDGp8xzBkvwhogD5YJE5wJ-Zj-CIf3aoyu7mn-TI6K8TREL8ht0w428OhTJo2YwZDAdBgNVHQ4EFgQU1FYYwIk46A5YhBjJdmK_q7vFkL4wHwYDVR0jBBgwFoAU1FYYwIk46A5YhBjJdmK_q7vFkL4wEgYDVR0TAQH_BAgwBgEB_wIBADAOBgNVHQ8BAf8EBAMCAYYwCgYIKoZIzj0EAwIDRwAwRAIgYSbvCRkoe39q1vgx0WddbrKufAxRPa7XfqB22XXRjqECIG5MWq9Vi2HWtvHMI_TFZkeZAr2RXLGfwY99fbsQjPOzWQRD2BhZBD6mZ2RvY1R5cGV3ZXUuZXVyb3BhLmVjLmV1ZGkucGlkLjFndmVyc2lvbmMxLjBsdmFsaWRpdHlJbmZvo2ZzaWduZWTAdDIwMjQtMDgtMTJUMDk6NTQ6NDVaaXZhbGlkRnJvbcB0MjAyNC0wOC0xMlQwOTo1NDo0NVpqdmFsaWRVbnRpbMB0MjAyNC0wOC0yNlQwOTo1NDo0NVpsdmFsdWVEaWdlc3RzoXdldS5ldXJvcGEuZWMuZXVkaS5waWQuMbYAWCCvskDflzwTCZtcnsrzXsOU9m05eSNm0hX27c6MtEgoQQFYIHbvdhFli-Vj2QAlVekthJrZTxNxFV0c5jUcWVQzVSWNAlggxvSnkCi74fj7LKxN096FOD1A3yaJE1Q1ewUxzRPOpnUDWCAQSst_QRxfPh4kge7Lb93OaVCL8qxL9FEiTVGO-rXP9QRYIEf_WIblmifCMl0_HGeNScN2C_E4QVXV37abXdv8ENifBVggKQuMDvT5saf9K43736PCNqheKAluYOgMbcHVN5hQeN0GWCCtgBfw4ePhqM2czxrLgWOus8B3bjnBsWGgHq4lA6lRLwdYIIlqmG3eo74sGxO7byOFc59yQI6XPawQp9PtY6C4BUs_CFggrjZcDDFmXsM0Jxjr35RjbZVJtoVJS3L6qaa6QgFhfeYJWCCXuRiHPPNLLw4qWc8EUmbL-VnaGxlo8e3XZQgvZ3YqmQpYILfAISkQqu0f8EzCZHQ_-thyT_9iElb8FAlqASOG2fisC1ggyqu3PZPIiqbejTlmSKAUCtMdcFOobJYGn0156bevqN4MWCC5zwa4kwB0TXhNJ-my8ggXwTdmvPx2iAW6seJoDErR4g1YIOAwesXOi-S_mGypnck57gnufkTbhUt2udjcaM06VZKsDlggox1WJsXZ4xLhtY4mZlkOmeik3Fpe_LKX5_apY39MpqAPWCAHs0MWj1mk7hRa4_hTekFVQEAAjsslMOBfoRNEh2ajThBYIGWT4skSS5ohFJEmxp-rS2IYWnDH2fqI8Xkd-KbIJ_9sEVggK_LEV8CWy-fI6jpUwAjhx6OB4RjaTN7r8byVgQWQLAASWCC4RLSkNxq3KHGw7bx7p5VUhlcA33yo1hGlk7bsw62tLhNYINUZ0H9TOY4g5Dmz9hVRtv0sz4zrWQ6bMKRqnPJdAO66FFggU4jSqGp2BJ7rBk1zA3CxGSrFC1PvIszy_xhwgK6EIdcVWCDb5QShS33aw9bRbuU_FzZg24fwKzAfNJSSoNB-PnqtpW1kZXZpY2VLZXlJbmZvoWlkZXZpY2VLZXmkAQIgASFYIMkkJiVq1x62RgmY2s7-s2pByVgssNY0zetFjuzlvv6KIlgg5DfobZoKCuJpXPHdlwqvInE6mrmXfM_X__zEMz1CGrZvZGlnZXN0QWxnb3JpdGhtZ1NIQS0yNTZYQM5md3Jui02yZ3DL_NrKFrqxHNaXDTz75wDO5CpEHuOpw5YjBHagr17tGWiOrDe5t4V7I8nDIdq870rT-W_L_rNqbmFtZVNwYWNlc6F3ZXUuZXVyb3BhLmVjLmV1ZGkucGlkLjGW2BhYVaRmcmFuZG9tUOmMzCPI9kDqe-0NQ0EbIKpoZGlnZXN0SUQAbGVsZW1lbnRWYWx1ZWZCRVJMSU5xZWxlbWVudElkZW50aWZpZXJrYmlydGhfcGxhY2XYGFhTpGZyYW5kb21QVVH4tCLayO7SSBhqx2US02hkaWdlc3RJRAFsZWxlbWVudFZhbHVlZUVSSUtBcWVsZW1lbnRJZGVudGlmaWVyamdpdmVuX25hbWXYGFhPpGZyYW5kb21QCfHRnlZb4v3qSuYd2PibHmhkaWdlc3RJRAJsZWxlbWVudFZhbHVl9HFlbGVtZW50SWRlbnRpZmllcmthZ2Vfb3Zlcl82NdgYWFukZnJhbmRvbVD2WZy0yqWy69IHBwSNkKpbaGRpZ2VzdElEA2xlbGVtZW50VmFsdWVmR0FCTEVScWVsZW1lbnRJZGVudGlmaWVycWZhbWlseV9uYW1lX2JpcnRo2BhYVKRmcmFuZG9tUJmgVzuf_ubp95FPy86FEvZoZGlnZXN0SUQEbGVsZW1lbnRWYWx1ZRkHwHFlbGVtZW50SWRlbnRpZmllcm5hZ2VfYmlydGhfeWVhctgYWE-kZnJhbmRvbVBOofwN6__3wkZE7yjqiHIsaGRpZ2VzdElEBWxlbGVtZW50VmFsdWX1cWVsZW1lbnRJZGVudGlmaWVya2FnZV9vdmVyXzE02BhYVqRmcmFuZG9tUIpoionKNLnq5EicgmOfNURoZGlnZXN0SUQGbGVsZW1lbnRWYWx1ZWVLw5ZMTnFlbGVtZW50SWRlbnRpZmllcm1yZXNpZGVudF9jaXR52BhYUaRmcmFuZG9tUNlR8LXNWQtCb6bcDo-jmXRoZGlnZXN0SUQHbGVsZW1lbnRWYWx1ZRgocWVsZW1lbnRJZGVudGlmaWVybGFnZV9pbl95ZWFyc9gYWE-kZnJhbmRvbVArRaafijSU1OAnVNT-s7ReaGRpZ2VzdElECGxlbGVtZW50VmFsdWX1cWVsZW1lbnRJZGVudGlmaWVya2FnZV9vdmVyXzIx2BhYVaRmcmFuZG9tUAGJVVRKwJo5BkGGAa26CSpoZGlnZXN0SUQJbGVsZW1lbnRWYWx1ZWJERXFlbGVtZW50SWRlbnRpZmllcm9pc3N1aW5nX2NvdW50cnnYGFhipGZyYW5kb21QGEs8dsV8gf1k7Rt4FKSToGhkaWdlc3RJRApsZWxlbWVudFZhbHVlb0hFSURFU1RSQVNTRSAxN3FlbGVtZW50SWRlbnRpZmllcm9yZXNpZGVudF9zdHJlZXTYGFhYpGZyYW5kb21QLM0EBAAOwjpqc0UKF34qmGhkaWdlc3RJRAtsZWxlbWVudFZhbHVlajE5ODQtMDEtMjZxZWxlbWVudElkZW50aWZpZXJqYmlydGhfZGF0ZdgYWE-kZnJhbmRvbVA3IWIW1HB3lNsnxSuuRySqaGRpZ2VzdElEDGxlbGVtZW50VmFsdWX1cWVsZW1lbnRJZGVudGlmaWVya2FnZV9vdmVyXzE42BhYT6RmcmFuZG9tUM-7koVRh2kwiDgaKDJIGHpoZGlnZXN0SUQNbGVsZW1lbnRWYWx1ZfVxZWxlbWVudElkZW50aWZpZXJrYWdlX292ZXJfMTbYGFhspGZyYW5kb21Qdk3QZz-ByvY5p_nCznZpsWhkaWdlc3RJRA5sZWxlbWVudFZhbHVlomV2YWx1ZWJERWtjb3VudHJ5TmFtZWdHZXJtYW55cWVsZW1lbnRJZGVudGlmaWVya25hdGlvbmFsaXR52BhYa6RmcmFuZG9tUDo7p8EzDLrONnwThrrZPpFoZGlnZXN0SUQPbGVsZW1lbnRWYWx1ZcB4GDIwMjQtMDgtMTJUMDk6NTQ6NDUuMzUzWnFlbGVtZW50SWRlbnRpZmllcm1pc3N1YW5jZV9kYXRl2BhYVqRmcmFuZG9tUCnE0hOZldYygKnaVdVB98xoZGlnZXN0SUQQbGVsZW1lbnRWYWx1ZWJERXFlbGVtZW50SWRlbnRpZmllcnByZXNpZGVudF9jb3VudHJ52BhYaaRmcmFuZG9tUHumz4SCSDR675O0CL5XpdJoZGlnZXN0SUQRbGVsZW1lbnRWYWx1ZcB4GDIwMjQtMDgtMjZUMDk6NTQ6NDUuMzUzWnFlbGVtZW50SWRlbnRpZmllcmtleHBpcnlfZGF0ZdgYWFmkZnJhbmRvbVB8_S55GPC30teiTgcbR5XoaGRpZ2VzdElEEmxlbGVtZW50VmFsdWVqTVVTVEVSTUFOTnFlbGVtZW50SWRlbnRpZmllcmtmYW1pbHlfbmFtZdgYWFekZnJhbmRvbVCkjMgV13-Ol_9lJc7PHGG4aGRpZ2VzdElEE2xlbGVtZW50VmFsdWViREVxZWxlbWVudElkZW50aWZpZXJxaXNzdWluZ19hdXRob3JpdHnYGFhdpGZyYW5kb21QG2MHuw_uyn6CqCHgfJSJQ2hkaWdlc3RJRBRsZWxlbWVudFZhbHVlZTUxMTQ3cWVsZW1lbnRJZGVudGlmaWVydHJlc2lkZW50X3Bvc3RhbF9jb2Rl2BhYT6RmcmFuZG9tUCePGEsH7uUl8rl3q5EQdQVoZGlnZXN0SUQVbGVsZW1lbnRWYWx1ZfVxZWxlbWVudElkZW50aWZpZXJrYWdlX292ZXJfMTI'
