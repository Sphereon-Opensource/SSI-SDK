{
  "IEBSIAuthorizationClient": {
    "components": {
      "schemas": {
        "CreateOAuth2SessionArgs": {
          "type": "object",
          "properties": {
            "grantType": {
              "type": "string"
            },
            "clientAssertionType": {
              "type": "string"
            },
            "clientAssertion": {
              "type": "string"
            },
            "scope": {
              "$ref": "#/components/schemas/OpenIDScope"
            }
          },
          "required": ["grantType", "clientAssertionType", "clientAssertion", "scope"]
        },
        "OpenIDScope": {
          "type": "string",
          "enum": [
            "openid%20didr_write",
            "openid%20didr_invite",
            "openid%20tir_write",
            "openid%20tir_invite",
            "openid%20timestamp_write",
            "openid%20tnt_authorise",
            "openid%20tnt_create",
            "openid%20tnt_write"
          ],
          "description": "The OpenID scope"
        },
        "CreateOAuth2SessionResponse": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CreateOAuth2SessionSuccessResponse"
            },
            {
              "$ref": "#/components/schemas/ExceptionResponse"
            }
          ]
        },
        "CreateOAuth2SessionSuccessResponse": {
          "type": "object",
          "properties": {
            "ake1_enc_payload": {
              "type": "string"
            },
            "ake1_jws_detached": {
              "type": "string"
            },
            "ake1_sig_payload": {
              "$ref": "#/components/schemas/Ake1SigPayload"
            },
            "kid": {
              "type": "string"
            }
          },
          "required": ["ake1_enc_payload", "ake1_jws_detached", "ake1_sig_payload", "kid"]
        },
        "Ake1SigPayload": {
          "type": "object",
          "properties": {
            "ake1_enc_payload": {
              "type": "string"
            },
            "ake1_nonce": {
              "type": "string"
            },
            "did": {
              "type": "string"
            },
            "kid": {
              "type": "string"
            },
            "iat": {
              "type": "number"
            },
            "exp": {
              "type": "number"
            },
            "iss": {
              "type": "string"
            }
          }
        },
        "ExceptionResponse": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "status": {
              "type": "number"
            },
            "detail": {
              "type": "string"
            },
            "instance": {
              "type": "string"
            }
          }
        },
        "CreateSIOPSessionArgs": {
          "type": "object",
          "properties": {
            "id_token": {
              "type": "string"
            },
            "vp_token": {
              "type": "string"
            }
          },
          "required": ["id_token"]
        },
        "CreateSIOPSessionResponse": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/CreateSIOPSessionSuccessResponse"
            },
            {
              "$ref": "#/components/schemas/ExceptionResponse"
            }
          ]
        },
        "CreateSIOPSessionSuccessResponse": {
          "type": "object",
          "properties": {
            "ake1_enc_payload": {
              "type": "string"
            },
            "ake1_jws_detached": {
              "type": "string"
            },
            "ake1_sig_payload": {
              "$ref": "#/components/schemas/Ake1SigPayload"
            },
            "kid": {
              "type": "string"
            }
          }
        },
        "GetAccessTokenArgs": {
          "type": "object",
          "properties": {
            "grant_type": {
              "type": "string"
            },
            "vp_token": {
              "type": "string"
            },
            "presentation_submission": {
              "type": "string"
            },
            "scope": {
              "$ref": "#/components/schemas/OpenIDScope"
            }
          },
          "required": ["grant_type", "vp_token", "presentation_submission", "scope"]
        },
        "GetAccessTokenResponse": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/GetAccessTokenSuccessResponse"
            },
            {
              "$ref": "#/components/schemas/ExceptionResponse"
            }
          ]
        },
        "GetAccessTokenSuccessResponse": {
          "type": "object",
          "properties": {
            "access_token": {
              "type": "string"
            },
            "token_type": {
              "$ref": "#/components/schemas/TokenType"
            },
            "expires_in": {
              "type": "number"
            },
            "scope": {
              "$ref": "#/components/schemas/OpenIDScope"
            },
            "id_token": {
              "type": "string"
            }
          },
          "required": ["access_token", "token_type", "scope", "id_token"]
        },
        "TokenType": {
          "type": "string",
          "const": "Bearer"
        },
        "GetOIDProviderJwksResponse": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/GetOIDProviderJwksSuccessResponse"
            },
            {
              "$ref": "#/components/schemas/ExceptionResponse"
            }
          ]
        },
        "GetOIDProviderJwksSuccessResponse": {
          "type": "object",
          "properties": {
            "keys": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Key"
              }
            }
          },
          "required": ["keys"]
        },
        "Key": {
          "type": "object",
          "properties": {
            "kty": {
              "type": "string"
            },
            "crv": {
              "type": "string"
            },
            "alg": {
              "type": "string"
            },
            "x": {
              "type": "string"
            },
            "y": {
              "type": "string"
            },
            "kid": {
              "type": "string"
            }
          }
        },
        "GetOIDProviderMetadataResponse": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/GetOIDProviderMetadataSuccessResponse"
            },
            {
              "$ref": "#/components/schemas/ExceptionResponse"
            }
          ]
        },
        "GetOIDProviderMetadataSuccessResponse": {
          "type": "object",
          "properties": {
            "issuer": {
              "type": "string"
            },
            "authorization_endpoint": {
              "type": "string"
            },
            "token_endpoint": {
              "type": "string"
            },
            "presentation_definition_endpoint": {
              "type": "string"
            },
            "jwks_uri": {
              "type": "string"
            },
            "scopes_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "response_types_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "response_mode_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "grant_types_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subject_types_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "id_token_signing_alg_values_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "request_object_signing_alg_values_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "request_parameter_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "token_endpoint_auth_methods_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "request_authentication_methods_supported": {
              "type": "object",
              "properties": {
                "authorization_endpoint": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": ["authorization_endpoint"]
            },
            "vp_formats_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subject_syntax_types_supported": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "subject_trust_frameworks_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "id_token_types_supported": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "issuer",
            "authorization_endpoint",
            "token_endpoint",
            "jwks_uri",
            "scopes_supported",
            "response_types_supported",
            "subject_types_supported",
            "id_token_signing_alg_values_supported"
          ]
        },
        "GetPresentationDefinitionArgs": {
          "type": "object",
          "properties": {
            "scope": {
              "$ref": "#/components/schemas/OpenIDScope"
            }
          },
          "required": ["scope"]
        },
        "GetPresentationDefinitionResponse": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/GetPresentationDefinitionSuccessResponse"
            },
            {
              "$ref": "#/components/schemas/ExceptionResponse"
            }
          ]
        },
        "GetPresentationDefinitionSuccessResponse": {
          "type": "object",
          "properties": {
            "format": {
              "$ref": "#/components/schemas/Format"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "purpose": {
              "type": "string"
            },
            "submission_requirements": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SubmissionRequirement"
              }
            },
            "input_descriptors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InputDescriptorV2"
              }
            },
            "frame": {
              "type": "object"
            }
          },
          "required": ["id", "input_descriptors"]
        },
        "Format": {
          "type": "object",
          "properties": {
            "jwt": {
              "$ref": "#/components/schemas/JwtObject"
            },
            "jwt_vc": {
              "$ref": "#/components/schemas/JwtObject"
            },
            "jwt_vc_json": {
              "$ref": "#/components/schemas/JwtObject"
            },
            "jwt_vp": {
              "$ref": "#/components/schemas/JwtObject"
            },
            "jwt_vp_json": {
              "$ref": "#/components/schemas/JwtObject"
            },
            "ldp": {
              "$ref": "#/components/schemas/LdpObject"
            },
            "ldp_vc": {
              "$ref": "#/components/schemas/LdpObject"
            },
            "ldp_vp": {
              "$ref": "#/components/schemas/LdpObject"
            },
            "di": {
              "$ref": "#/components/schemas/DiObject"
            },
            "di_vc": {
              "$ref": "#/components/schemas/DiObject"
            },
            "di_vp": {
              "$ref": "#/components/schemas/DiObject"
            },
            "vc+sd-jwt": {
              "$ref": "#/components/schemas/SdJwtObject"
            }
          }
        },
        "JwtObject": {
          "type": "object",
          "properties": {
            "alg": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["alg"]
        },
        "LdpObject": {
          "type": "object",
          "properties": {
            "proof_type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["proof_type"]
        },
        "DiObject": {
          "type": "object",
          "properties": {
            "proof_type": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "cryptosuite": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["proof_type", "cryptosuite"]
        },
        "SdJwtObject": {
          "type": "object",
          "properties": {
            "sd-jwt_alg_values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "kb-jwt_alg_values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "SubmissionRequirement": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "purpose": {
              "type": "string"
            },
            "rule": {
              "$ref": "#/components/schemas/Rules"
            },
            "count": {
              "type": "number"
            },
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            },
            "from": {
              "type": "string"
            },
            "from_nested": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SubmissionRequirement"
              }
            }
          },
          "required": ["rule"]
        },
        "Rules": {
          "type": "string",
          "enum": ["all", "pick"]
        },
        "InputDescriptorV2": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "purpose": {
              "type": "string"
            },
            "format": {
              "$ref": "#/components/schemas/Format"
            },
            "group": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "issuance": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Issuance"
              }
            },
            "constraints": {
              "$ref": "#/components/schemas/ConstraintsV2"
            }
          },
          "required": ["id", "constraints"]
        },
        "Issuance": {
          "type": "object",
          "properties": {
            "manifest": {
              "type": "string"
            }
          },
          "additionalProperties": {}
        },
        "ConstraintsV2": {
          "type": "object",
          "properties": {
            "limit_disclosure": {
              "$ref": "#/components/schemas/Optionality"
            },
            "statuses": {
              "$ref": "#/components/schemas/Statuses"
            },
            "fields": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FieldV2"
              }
            },
            "subject_is_issuer": {
              "$ref": "#/components/schemas/Optionality"
            },
            "is_holder": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HolderSubject"
              }
            },
            "same_subject": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HolderSubject"
              }
            }
          }
        },
        "Optionality": {
          "type": "string",
          "enum": ["required", "preferred"]
        },
        "Statuses": {
          "type": "object",
          "properties": {
            "active": {
              "$ref": "#/components/schemas/PdStatus"
            },
            "suspended": {
              "$ref": "#/components/schemas/PdStatus"
            },
            "revoked": {
              "$ref": "#/components/schemas/PdStatus"
            }
          }
        },
        "PdStatus": {
          "type": "object",
          "properties": {
            "directive": {
              "$ref": "#/components/schemas/Directives"
            }
          }
        },
        "Directives": {
          "type": "string",
          "enum": ["required", "allowed", "disallowed"]
        },
        "FieldV2": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "path": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "purpose": {
              "type": "string"
            },
            "filter": {
              "$ref": "#/components/schemas/FilterV2"
            },
            "predicate": {
              "$ref": "#/components/schemas/Optionality"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["path"]
        },
        "FilterV2": {
          "type": "object",
          "properties": {
            "const": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "enum": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OneOfNumberString"
              }
            },
            "exclusiveMinimum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "exclusiveMaximum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "format": {
              "type": "string"
            },
            "formatMaximum": {
              "type": "string"
            },
            "formatMinimum": {
              "type": "string"
            },
            "formatExclusiveMaximum": {
              "type": "string"
            },
            "formatExclusiveMinimum": {
              "type": "string"
            },
            "minLength": {
              "type": "number"
            },
            "maxLength": {
              "type": "number"
            },
            "minimum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "maximum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "not": {
              "type": "object"
            },
            "pattern": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "contains": {
              "$ref": "#/components/schemas/FilterV2Base"
            },
            "items": {
              "$ref": "#/components/schemas/FilterV2BaseItems"
            }
          },
          "required": ["type"]
        },
        "OneOfNumberString": {
          "type": ["number", "string"]
        },
        "FilterV2Base": {
          "type": "object",
          "properties": {
            "const": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "enum": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OneOfNumberString"
              }
            },
            "exclusiveMinimum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "exclusiveMaximum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "format": {
              "type": "string"
            },
            "formatMaximum": {
              "type": "string"
            },
            "formatMinimum": {
              "type": "string"
            },
            "formatExclusiveMaximum": {
              "type": "string"
            },
            "formatExclusiveMinimum": {
              "type": "string"
            },
            "minLength": {
              "type": "number"
            },
            "maxLength": {
              "type": "number"
            },
            "minimum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "maximum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "not": {
              "type": "object"
            },
            "pattern": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "contains": {
              "$ref": "#/components/schemas/FilterV2Base"
            },
            "items": {
              "$ref": "#/components/schemas/FilterV2BaseItems"
            }
          }
        },
        "FilterV2BaseItems": {
          "type": "object",
          "properties": {
            "const": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "enum": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OneOfNumberString"
              }
            },
            "exclusiveMinimum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "exclusiveMaximum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "format": {
              "type": "string"
            },
            "formatMaximum": {
              "type": "string"
            },
            "formatMinimum": {
              "type": "string"
            },
            "formatExclusiveMaximum": {
              "type": "string"
            },
            "formatExclusiveMinimum": {
              "type": "string"
            },
            "minLength": {
              "type": "number"
            },
            "maxLength": {
              "type": "number"
            },
            "minimum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "maximum": {
              "$ref": "#/components/schemas/OneOfNumberString"
            },
            "not": {
              "type": "object"
            },
            "pattern": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "contains": {
              "$ref": "#/components/schemas/FilterV2Base"
            },
            "items": {
              "$ref": "#/components/schemas/FilterV2BaseItems"
            }
          },
          "required": ["type"]
        },
        "HolderSubject": {
          "type": "object",
          "properties": {
            "field_id": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "directive": {
              "$ref": "#/components/schemas/Optionality"
            }
          },
          "required": ["field_id", "directive"]
        },
        "InitiateSIOPDidAuthRequestArgs": {
          "type": "object",
          "properties": {
            "scope": {
              "$ref": "#/components/schemas/OpenIDScope"
            }
          },
          "required": ["scope"]
        },
        "InitiateSIOPDidAuthRequestResponse": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/InitiateSIOPDidAuthRequestSuccessResponse"
            },
            {
              "$ref": "#/components/schemas/ExceptionResponse"
            }
          ]
        },
        "InitiateSIOPDidAuthRequestSuccessResponse": {
          "type": "object",
          "properties": {
            "uri": {
              "type": "string"
            }
          },
          "required": ["uri"]
        }
      },
      "methods": {
        "createOAuth2Session": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/CreateOAuth2SessionArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/CreateOAuth2SessionResponse"
          }
        },
        "createSIOPSession": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/CreateSIOPSessionArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/CreateSIOPSessionResponse"
          }
        },
        "getAccessToken": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/GetAccessTokenArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/GetAccessTokenResponse"
          }
        },
        "getOIDProviderJwks": {
          "description": "",
          "arguments": {
            "type": "object"
          },
          "returnType": {
            "$ref": "#/components/schemas/GetOIDProviderJwksResponse"
          }
        },
        "getOIDProviderMetadata": {
          "description": "",
          "arguments": {
            "type": "object"
          },
          "returnType": {
            "$ref": "#/components/schemas/GetOIDProviderMetadataResponse"
          }
        },
        "getPresentationDefinition": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/GetPresentationDefinitionArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/GetPresentationDefinitionResponse"
          }
        },
        "initiateSIOPDidAuthRequest": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/InitiateSIOPDidAuthRequestArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/InitiateSIOPDidAuthRequestResponse"
          }
        }
      }
    }
  }
}
