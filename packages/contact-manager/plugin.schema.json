{
  "IContactManager": {
    "components": {
      "schemas": {
        "IGetContactArgs": {
          "type": "object",
          "properties": {
            "contactId": {
              "type": "string"
            }
          },
          "required": ["contactId"]
        },
        "IGetContactsArgs": {
          "type": "object",
          "properties": {
            "filter": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        },
        "IAddContactArgs": {
          "type": "object",
          "properties": {
            "contact": {
              "$ref": "#/components/schemas/IBasicContact"
            }
          },
          "required": ["party"]
        },
        "IRemoveContactArgs": {
          "type": "object",
          "properties": {
            "contactId": {
              "type": "string"
            }
          },
          "required": ["contactId"]
        },
        "IUpdateContactArgs": {
          "type": "object",
          "properties": {
            "contact": {
              "$ref": "#/components/schemas/IBasicContact"
            }
          },
          "required": ["party"]
        },
        "IGetIdentityArgs": {
          "type": "object",
          "properties": {
            "identityId": {
              "type": "string"
            }
          },
          "required": ["identityId"]
        },
        "IGetIdentitiesArgs": {
          "type": "object",
          "properties": {
            "contactId": {
              "type": "string"
            }
          },
          "required": ["contactId"]
        },
        "IAddIdentityArgs": {
          "type": "object",
          "properties": {
            "identity": {
              "$ref": "#/components/schemas/IIdentity"
            }
          },
          "required": ["identity"]
        },
        "IRemoveIdentityArgs": {
          "type": "object",
          "properties": {
            "identityId": {
              "type": "string"
            }
          },
          "required": ["identityId"]
        },
        "IUpdateIdentityArgs": {
          "type": "object",
          "properties": {
            "identity": {
              "$ref": "#/components/schemas/IIdentity"
            }
          },
          "required": ["identity"]
        },
        "IBasicContact": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "alias": {
              "type": "string"
            },
            "uri": {
              "type": "string"
            },
            "identities": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IBasicIdentity"
              }
            }
          },
          "required": ["name", "alias"]
        },
        "IContact": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "alias": {
              "type": "string"
            },
            "uri": {
              "type": "string"
            },
            "identities": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IIdentity"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "required": ["id", "name", "alias", "createdAt", "lastUpdatedAt"]
        },
        "IMetadataItem": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "required": ["id", "label", "value"]
        },
        "BasicMetadataItem": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "required": ["label", "value"]
        },
        "IBasicIdentity": {
          "type": "object",
          "properties": {
            "alias": {
              "type": "string"
            },
            "identifier": {
              "$ref": "#/components/schemas/BasicCorrelationIdentifier"
            },
            "connection": {
              "$ref": "#/components/schemas/IBasicConnection"
            },
            "metadata": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IMetadataItem"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "required": ["id", "alias", "identifier", "createdAt", "lastUpdatedAt"]
        },
        "IIdentity": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "alias": {
              "type": "string"
            },
            "identifier": {
              "$ref": "#/components/schemas/ICorrelationIdentifier"
            },
            "connection": {
              "$ref": "#/components/schemas/IConnection"
            },
            "metadata": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IMetadataItem"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "lastUpdatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "required": ["id", "alias", "identifier", "createdAt", "lastUpdatedAt"]
        },
        "CorrelationIdentifierEnum": {
          "type": "string",
          "enum": ["did", "url"]
        },
        "BasicCorrelationIdentifier": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/CorrelationIdentifierEnum"
            },
            "correlationId": {
              "type": "string"
            }
          },
          "required": ["type", "correlationId"]
        },
        "ICorrelationIdentifier": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "$ref": "#/components/schemas/CorrelationIdentifierEnum"
            },
            "correlationId": {
              "type": "string"
            }
          },
          "required": ["id", "type", "correlationId"]
        },
        "ConnectionTypeEnum": {
          "type": "string",
          "enum": ["openid", "didauth", "siopv2+oidc4vp"]
        },
        "IBasicConnection": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/ConnectionTypeEnum"
            },
            "config": {
              "$ref": "#/components/schemas/BasicConnectionConfig"
            }
          },
          "required": ["type", "config"]
        },
        "IConnection": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "$ref": "#/components/schemas/ConnectionTypeEnum"
            },
            "config": {
              "$ref": "#/components/schemas/ConnectionConfig"
            }
          },
          "required": ["id", "type", "config"]
        },
        "BasicConnectionConfig": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/BasicDidAuthConfig"
            },
            {
              "$ref": "#/components/schemas/BasicOpenIdConfig"
            }
          ]
        },
        "ConnectionConfig": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/IOpenIdConfig"
            },
            {
              "$ref": "#/components/schemas/IDidAuthConfig"
            }
          ]
        },
        "BasicDidAuthConfig": {
          "type": "object",
          "properties": {
            "identifier": {
              "$ref": "#/components/schemas/IIdentifier"
            },
            "stateId": {
              "type": "string"
            },
            "redirectUrl": {
              "type": "string"
            },
            "sessionId": {
              "type": "string"
            }
          },
          "required": ["identifier", "stateId", "redirectUrl", "sessionId"]
        },
        "BasicOpenIdConfig": {
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "issuer": {
              "type": "string"
            },
            "redirectUrl": {
              "type": "string"
            },
            "dangerouslyAllowInsecureHttpRequests": {
              "type": "boolean"
            },
            "clientAuthMethod": {
              "type": "string",
              "enum": ["basic", "post"]
            }
          },
          "required": ["clientId", "clientSecret", "scopes", "issuer", "redirectUrl", "dangerouslyAllowInsecureHttpRequests"]
        },
        "IOpenIdConfig": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "issuer": {
              "type": "string"
            },
            "redirectUrl": {
              "type": "string"
            },
            "dangerouslyAllowInsecureHttpRequests": {
              "type": "boolean"
            },
            "clientAuthMethod": {
              "type": "string",
              "enum": ["basic", "post"]
            }
          },
          "required": ["id", "clientId", "clientSecret", "scopes", "issuer", "redirectUrl", "dangerouslyAllowInsecureHttpRequests"]
        },
        "IDidAuthConfig": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "identifier": {
              "$ref": "#/components/schemas/IIdentifier"
            },
            "stateId": {
              "type": "string"
            },
            "redirectUrl": {
              "type": "string"
            },
            "sessionId": {
              "type": "string"
            }
          },
          "required": ["id", "identifier", "stateId", "redirectUrl", "sessionId"]
        },
        "IIdentifier": {
          "type": "object",
          "properties": {
            "did": {
              "type": "string",
              "description": "Decentralized identifier"
            },
            "alias": {
              "type": "string",
              "description": "Optional. Identifier alias. Can be used to reference an object in an external system"
            },
            "provider": {
              "type": "string",
              "description": "Identifier provider name"
            },
            "controllerKeyId": {
              "type": "string",
              "description": "Controller key id"
            },
            "keys": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IKey"
              },
              "description": "Array of managed keys"
            },
            "services": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IService"
              },
              "description": "Array of services"
            }
          },
          "required": ["did", "provider", "keys", "services"],
          "description": "Identifier interface"
        },
        "IKey": {
          "type": "object",
          "properties": {
            "kid": {
              "type": "string",
              "description": "Key ID"
            },
            "kms": {
              "type": "string",
              "description": "Key Management System"
            },
            "type": {
              "$ref": "#/components/schemas/TKeyType",
              "description": "Key type"
            },
            "publicKeyHex": {
              "type": "string",
              "description": "Public key"
            },
            "privateKeyHex": {
              "type": "string",
              "description": "Optional. Private key"
            },
            "meta": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KeyMetadata"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional. Key metadata. This should be used to determine which algorithms are supported."
            }
          },
          "required": ["kid", "kms", "type", "publicKeyHex"],
          "description": "Cryptographic key"
        },
        "TKeyType": {
          "type": "string",
          "enum": ["Ed25519", "Secp256k1", "Secp256r1", "X25519", "Bls12381G1", "Bls12381G2", "RSA"],
          "description": "Cryptographic key type."
        },
        "KeyMetadata": {
          "type": "object",
          "properties": {
            "algorithms": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "description": "This encapsulates data about a key.\n\nImplementations of  {@link  @veramo/key-manager#AbstractKeyManagementSystem | AbstractKeyManagementSystem }  should populate this object, for each key, with the algorithms that can be performed using it.\n\nThis can also be used to add various tags to the keys under management."
        },
        "IService": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID"
            },
            "type": {
              "type": "string",
              "description": "Service type"
            },
            "serviceEndpoint": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IServiceEndpoint"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IServiceEndpoint"
                  }
                }
              ],
              "description": "Endpoint URL"
            },
            "description": {
              "type": "string",
              "description": "Optional. Description"
            }
          },
          "required": ["id", "type", "serviceEndpoint"],
          "description": "Identifier service"
        },
        "IServiceEndpoint": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ],
          "description": "Represents a service endpoint URL or a map of URLs"
        }
      },
      "methods": {
        "cmGetContact": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IGetContactArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/IContact"
          }
        },
        "cmGetContacts": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IGetContactsArgs"
          },
          "returnType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IContact"
            }
          }
        },
        "cmAddContact": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IAddContactArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/IContact"
          }
        },
        "cmRemoveContact": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IRemoveContactArgs"
          },
          "returnType": {
            "type": "boolean"
          }
        },
        "cmUpdateContact": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IUpdateContactArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/IContact"
          }
        },
        "cmGetIdentity": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IGetIdentityArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/IIdentity"
          }
        },
        "cmGetIdentities": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IGetIdentitiesArgs"
          },
          "returnType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IIdentity"
            }
          }
        },
        "cmAddIdentity": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IAddIdentityArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/IIdentity"
          }
        },
        "cmRemoveIdentity": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IRemoveIdentityArgs"
          },
          "returnType": {
            "type": "boolean"
          }
        },
        "cmUpdateIdentity": {
          "description": "",
          "arguments": {
            "$ref": "#/components/schemas/IUpdateConnectionArgs"
          },
          "returnType": {
            "$ref": "#/components/schemas/IIdentity"
          }
        }
      }
    }
  }
}
